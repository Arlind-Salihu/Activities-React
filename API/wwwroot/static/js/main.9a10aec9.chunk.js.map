{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/telefoni.ts","app/models/profile.ts","app/stores/telefoniStore.ts","app/stores/userStore.ts","app/stores/profileStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileTelefonat.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","features/telefonat/dashboard/TelefoniFilters.tsx","features/telefonat/dashboard/TelefoniListItemPrezenca.tsx","features/telefonat/dashboard/TelefoniListItem.tsx","features/telefonat/dashboard/TelefoniList.tsx","features/telefonat/dashboard/TelefoniListItemPlaceholder.tsx","features/telefonat/dashboard/TelefoniDashboard.tsx","features/telefonat/details/TelefoniDetailedChat.tsx","features/telefonat/details/TelefoniDetailedHeader.tsx","features/telefonat/details/TelefoniDetailedInfo.tsx","features/telefonat/details/TelefoniDetailedSidebar.tsx","features/telefonat/details/TelefoniDetails.tsx","app/common/form/MySelectInput.tsx","app/common/options/CategoryOptions.ts","app/common/form/MyDateInput.tsx","features/telefonat/form/TelefoniForm.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Telefonat","list","params","details","id","create","telefoni","update","telefoniPrezent","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listTelefonat","Telefoni","init","Object","assign","TelefoniFormValues","undefined","emri","kategoria","brendi","pershkrimi","cmimi","Profile","displayName","image","TelefoniStore","telefoniRegistry","Map","selectedTelefoni","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadTelefonat","axiosParams","result","setTelefoni","setPagination","setLoadingInitial","console","log","loadTelefoni","getTelefoni","runInAction","userStore","isInteresed","telefonatPrezencat","some","isHost","hostUsername","host","find","x","Date","state","createTelefoni","newTelefoni","updateTelefoni","updatedTelefoni","deleteTelefoni","updatePrezencen","filter","cancelTelefoniToggle","isCancelled","clearSelectedTelefoni","updatePrezencaFollowing","telefoniPrezenca","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","telefonatByDate","reduce","telefonat","format","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","setImage","setDisplayName","name","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userTelefonat","loadingTelefonat","setActiveTab","loadProfile","photo","photos","isMain","p","telefoniStore","followingCount","loadFollowings","loadUserTelefonat","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","telefoniId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComents","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","backgroundColor","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","MyTextInput","props","useField","field","meta","Form","Field","touched","label","Label","basic","color","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","Header","textAlign","placeholder","type","render","marginBottom","positive","fluid","ValidationErrors","Message","List","map","err","i","validationSchema","Yup","required","isValid","dirty","disabled","Segment","vertical","size","isLoggedIn","LoadingComponent","Dimmer","active","Loader","MyTextArea","setEditMode","bio","rows","floated","isCurrentUser","useState","Tab","Pane","Grid","Column","width","whiteSpace","Reveal","animated","Content","visible","hidden","e","preventDefault","handleFollow","Card","Description","str","length","substring","truncate","extra","Icon","Group","itemsPerRow","PhotoWidgetCropper","imagePreview","setCropper","height","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","border","borderColor","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","useEffect","revokeObjectURL","sub","minHeight","overflow","widths","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","panes","menuItem","pane","menu","secondary","onTabChange","activeIndex","handleTabChange","objectFit","Meta","menuPosition","verticalAlign","Statistic","Divider","useParams","marginTop","attached","has","onChange","styles","borderWidth","horizontal","telefonatPrezenca","Popup","hoverable","trigger","circular","bordered","TelefoniListItem","clearing","groupedTelefonat","group","TelefoniListItemPlaceholder","Placeholder","Line","Paragraph","loadingNext","setLoadingNext","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","telefoniImageStyle","telefoniImageTextStyle","bottom","left","padding","zIndex","top","ribbon","relaxed","divided","Extra","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptionsTelefonat","MyDateInput","selected","useHistory","nullable","enableReinitialize","uuid","handleFormSubmit","placeholderText","showTimeSelect","timeCaption","dateFormat","TestErrors","baseUrl","primary","NotFound","Inline","message","Modal","onClose","PrivateRoute","Component","component","rest","location","useLocation","finally","path","HomePage","hideProgressBar","TelefoniDashboard","TelefoniDetails","TelefoniForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.9a10aec9.chunk.js","sourcesContent":["export interface Pagination{\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T>{\r\n    data: T;\r\n    pagination: Pagination;\r\n\r\n    constructor(data: T, pagination: Pagination){\r\n        this.data = data;\r\n        this.pagination = pagination;\r\n    }\r\n}\r\n\r\nexport class PagingParams{\r\n    pageNumber;\r\n    pageSize;\r\n\r\n    constructor(pageNumber = 1, pageSize = 2){\r\n        this.pageNumber = pageNumber;\r\n        this.pageSize = pageSize;\r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { Telefoni, TelefoniFormValues } from \"../models/telefoni\";\r\nimport { store } from \"../stores/store\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { Photo, Profile, UserTelefoni } from \"../models/profile\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay)\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.commonStore.token;\r\n    if (token) config.headers.Authorization = `Bearer ${token}`\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if(process.env.NODE_ENV === 'development') await sleep(1000);\r\n    const pagination = response.headers['pagination'];\r\n    if(pagination){\r\n        response.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n        return response as AxiosResponse<PaginatedResult<any>>\r\n    }\r\n    return response;\r\n},(error: AxiosError) =>{\r\n    const {data, status, config} = error.response!;\r\n    switch (status){\r\n        case 400:\r\n            if(typeof data === 'string'){\r\n                toast.error(data);\r\n            }\r\n            if(config.method === 'get' && data.errors.hasOwnProperty('id')){\r\n                history.push('/not-found');\r\n            }\r\n            if(data.errors){\r\n                const modalStateErrors = [];\r\n                for (const key in data.errors){\r\n                    if(data.errors[key]){\r\n                        modalStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modalStateErrors.flat();\r\n            }\r\n            break;\r\n        case 401:\r\n            toast.error('unauthorised');\r\n            break;\r\n        case 404:\r\n            history.push('/not-found')\r\n            break;\r\n        case 500:\r\n            store.commonStore.setServerError(data);\r\n            history.push('/server-error');\r\n            break;\r\n    }\r\n    return Promise.reject(error);\r\n})\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Telefonat = {\r\n    list: (params: URLSearchParams) => axios.get<PaginatedResult<Telefoni[]>>('/telefonat', {params}).then(responseBody),\r\n    details: (id: string) => requests.get<Telefoni>(`/telefonat/${id}`),\r\n    create: (telefoni: TelefoniFormValues) => requests.post<void>('/telefonat', telefoni),\r\n    update: (telefoni: TelefoniFormValues) => requests.put<void>(`/telefonat/${telefoni.id}`, telefoni),\r\n    delete: (id: string) => requests.del<void>(`/telefonat/${id}`),\r\n    telefoniPrezent: (id: string) => requests.post<void>(`/telefonat/${id}/attend`,{})\r\n}\r\n\r\nconst Account = {\r\n    current: () => requests.get<User>('/account'),\r\n    login: (user: UserFormValues) => requests.post<User>('/account/login', user),\r\n    register: (user: UserFormValues) => requests.post<User>('/account/register', user),\r\n}\r\n\r\nconst Profiles = {\r\n    get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n    uploadPhoto: (file: Blob) =>{\r\n        let formData = new FormData();\r\n        formData.append('File', file);\r\n        return axios.post<Photo>('photos', formData, {\r\n            headers: {'Content-type': 'multipart/form-data'}\r\n        })\r\n    },\r\n    setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`,{}),\r\n    deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n    updateProfile: (profile: Partial<Profile>) => requests.put(`/profiles`, profile),\r\n    updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\r\n    listFollowings: (username: string, predicate: string) => requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n    listTelefonat: (username: string, predicate: string) => requests.get<UserTelefoni[]>(`/profiles/${username}/telefonat?predicate=${predicate}`)\r\n}\r\n\r\nconst agent = {\r\n    Telefonat, Account, Profiles\r\n}\r\n\r\nexport default agent;","import { Profile } from \"./profile\";\r\n\r\nexport interface Telefoni {\r\n    id: string;\r\n    emri: string;\r\n    kategoria: string;\r\n    brendi: string;\r\n    data: Date | null;\r\n    pershkrimi: string;\r\n    cmimi: number | null;\r\n    hostUsername: string;\r\n    isCancelled: boolean;\r\n    isInteresed: boolean;\r\n    isHost: boolean;\r\n    host?: Profile;\r\n    telefonatPrezencat: Profile[]\r\n}\r\n\r\nexport class Telefoni implements Telefoni{\r\n    constructor(init?: TelefoniFormValues){\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport class TelefoniFormValues{\r\n    id?: string = undefined;\r\n    emri: string = '';\r\n    kategoria: string = '';\r\n    brendi: string = '';\r\n    data: Date | null = null;\r\n    pershkrimi: string = '';\r\n    cmimi: number | null = null;\r\n\r\n    constructor(telefoni?: TelefoniFormValues){\r\n        if(telefoni){\r\n            this.id = telefoni.id;\r\n            this.emri = telefoni.emri;\r\n            this.kategoria = telefoni.kategoria;\r\n            this.brendi = telefoni.brendi;\r\n            this.data = telefoni.data;\r\n            this.pershkrimi = telefoni.pershkrimi;\r\n            this.cmimi = telefoni.cmimi;\r\n        }\r\n    }\r\n}","import { User } from \"./user\";\r\n\r\nexport interface Profile{\r\n    username: string;\r\n    displayName: string;\r\n    image?: string;\r\n    bio?: string;\r\n    followersCount: number;\r\n    followingCount: number;\r\n    following: boolean;\r\n    photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile{\r\n    constructor(user: User){\r\n        this.username = user.username;\r\n        this.displayName = user.displayName;\r\n        this.image = user.image;\r\n    }\r\n}\r\nexport interface Photo{\r\n    id: string;\r\n    url: string;\r\n    isMain: boolean;\r\n}\r\n\r\nexport interface UserTelefoni {\r\n    id: string;\r\n    emri: string;\r\n    kategoria: string;\r\n    data: Date;\r\n    }","import { format } from \"date-fns\";\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\"\r\nimport agent from \"../api/agent\";\r\nimport { Telefoni, TelefoniFormValues } from \"../models/telefoni\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\n\r\nexport default class TelefoniStore {\r\n    telefoniRegistry = new Map<string, Telefoni>();\r\n    selectedTelefoni: Telefoni | undefined = undefined;\r\n    editMode = false;\r\n    loading = false;\r\n    loadingInitial = false;\r\n    pagination: Pagination | null = null;\r\n    pagingParams = new PagingParams();\r\n    predicate = new Map().set('all', true);\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n\r\n        reaction(() => this.predicate.keys(),\r\n        () => {\r\n            this.pagingParams = new PagingParams();\r\n            this.telefoniRegistry.clear();\r\n            this.loadTelefonat();\r\n        }\r\n    )\r\n    }\r\n\r\n    setPagingParams = (pagingParams: PagingParams) =>{\r\n        this.pagingParams = pagingParams;\r\n    }\r\n\r\n    setPredicate = (predicate: string, value: string | Date) =>{\r\n        const resetPredicate = () =>{\r\n            this.predicate.forEach((value, key) => {\r\n                if(key !== 'startDate') this.predicate.delete(key);\r\n            })\r\n        }\r\n        switch (predicate) {\r\n            case 'all':\r\n                resetPredicate();\r\n                this.predicate.set('all', true);\r\n                break;\r\n            case 'isInteresed':\r\n                resetPredicate();\r\n                this.predicate.set('isInteresed', true);\r\n                break;\r\n            case 'isHost':\r\n                resetPredicate();\r\n                this.predicate.set('isHost', true);\r\n                break;\r\n            case 'startDate':\r\n                this.predicate.delete('startDate');\r\n                this.predicate.set('startDate', value);\r\n        }\r\n    }\r\n\r\n    get axiosParams(){\r\n        const params = new URLSearchParams();\r\n        params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n        params.append('pageSize', this.pagingParams.pageSize.toString());\r\n        this.predicate.forEach((value, key) => {\r\n            if(key === 'startDate'){\r\n                params.append(key, (value as Date).toISOString())\r\n            } else {\r\n                params.append(key, value);\r\n            }\r\n        })\r\n        return params;\r\n    }\r\n\r\n    get telefonatByDate() {\r\n        return Array.from(this.telefoniRegistry.values()).sort((a, b) => a.data!.getTime() - b.data!.getTime());\r\n    }\r\n\r\n    get groupedTelefonat(){\r\n        return Object.entries(\r\n            this.telefonatByDate.reduce((telefonat, telefoni) =>{\r\n                const data = format(telefoni.data!, 'dd MMM yyy');\r\n                telefonat[data] = telefonat[data] ? [...telefonat[data], telefoni] : [telefoni]\r\n                return telefonat;\r\n            }, {} as {[key: string]: Telefoni[]})\r\n        )\r\n    }\r\n\r\n    loadTelefonat = async () => {\r\n        this.loadingInitial = true;\r\n        try {\r\n            const result = await agent.Telefonat.list(this.axiosParams);\r\n            result.data.forEach((telefoni) => {\r\n                this.setTelefoni(telefoni);\r\n            })\r\n            this.setPagination(result.pagination);\r\n            this.setLoadingInitial(false);\r\n        } catch (error) {\r\n            console.log(error)\r\n            this.setLoadingInitial(false);\r\n        }\r\n    }\r\n\r\n    setPagination = (pagination: Pagination) => {\r\n        this.pagination = pagination;\r\n    }\r\n\r\n    loadTelefoni = async (id: string) => {\r\n        let telefoni = this.getTelefoni(id);\r\n        if (telefoni) {\r\n            this.selectedTelefoni = telefoni;\r\n            return telefoni;\r\n        } else {\r\n            this.loadingInitial = true;\r\n            try {\r\n                telefoni = await agent.Telefonat.details(id);\r\n                this.setTelefoni(telefoni);\r\n                runInAction(() => {\r\n                    this.selectedTelefoni = telefoni;\r\n                })\r\n                this.setLoadingInitial(false);\r\n                return telefoni;\r\n            } catch (error) {\r\n                console.log(error);\r\n                this.setLoadingInitial(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setTelefoni = (telefoni: Telefoni) => {\r\n        const user = store.userStore.user;\r\n        if (user){\r\n            telefoni.isInteresed = telefoni.telefonatPrezencat!.some(\r\n                a => a.username === user.username\r\n            )\r\n            telefoni.isHost = telefoni.hostUsername === user.username;\r\n            telefoni.host = telefoni.telefonatPrezencat?.find(x => x.username === telefoni.hostUsername)\r\n        }\r\n        telefoni.data = new Date(telefoni.data!);\r\n        this.telefoniRegistry.set(telefoni.id, telefoni);\r\n    }\r\n\r\n    private getTelefoni = (id: string) => {\r\n        return this.telefoniRegistry.get(id);\r\n    }\r\n\r\n    setLoadingInitial = (state: boolean) => {\r\n        this.loadingInitial = state;\r\n    }\r\n\r\n    createTelefoni = async (telefoni: TelefoniFormValues) => {\r\n        const user = store.userStore.user;\r\n        const telefoniPrezent = new Profile(user!);\r\n        try {\r\n            await agent.Telefonat.create(telefoni);\r\n            const newTelefoni = new Telefoni(telefoni);\r\n            newTelefoni.hostUsername = user!.username;\r\n            newTelefoni.telefonatPrezencat = [telefoniPrezent];\r\n            this.setTelefoni(newTelefoni);\r\n            runInAction(() => {\r\n                this.selectedTelefoni = newTelefoni;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    updateTelefoni = async (telefoni: TelefoniFormValues) => {\r\n        try {\r\n            await agent.Telefonat.update(telefoni);\r\n            runInAction(() => {\r\n                if(telefoni.id){\r\n                    let updatedTelefoni = {...this.getTelefoni(telefoni.id), ...telefoni}\r\n                    this.telefoniRegistry.set(telefoni.id, updatedTelefoni as Telefoni);\r\n                    this.selectedTelefoni = updatedTelefoni as Telefoni;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    deleteTelefoni = async (id: string) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Telefonat.delete(id);\r\n            runInAction(() => {\r\n                this.telefoniRegistry.delete(id);\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loading = false;\r\n            })\r\n        }\r\n    }\r\n\r\n    updatePrezencen = async () => {\r\n        const user = store.userStore.user;\r\n        this.loading = true;\r\n        try {\r\n            await agent.Telefonat.telefoniPrezent(this.selectedTelefoni!.id);\r\n            runInAction(() => {\r\n                if(this.selectedTelefoni?.isInteresed){\r\n                    this.selectedTelefoni.telefonatPrezencat = this.selectedTelefoni.telefonatPrezencat?.filter(a => a.username !== user?.username);\r\n                    this.selectedTelefoni.isInteresed = false;\r\n                } else {\r\n                    const telefoniPrezent = new Profile(user!);\r\n                    this.selectedTelefoni?.telefonatPrezencat?.push(telefoniPrezent);\r\n                    this.selectedTelefoni!.isInteresed = true;\r\n                }\r\n                this.telefoniRegistry.set(this.selectedTelefoni!.id, this.selectedTelefoni!)\r\n            })\r\n        } catch (error) {\r\n            console.log(error)            \r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    cancelTelefoniToggle = async () => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Telefonat.telefoniPrezent(this.selectedTelefoni!.id);\r\n            runInAction(() => {\r\n                this.selectedTelefoni!.isCancelled = !this.selectedTelefoni?.isCancelled;\r\n                this.telefoniRegistry.set(this.selectedTelefoni!.id, this.selectedTelefoni!)\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    clearSelectedTelefoni = () => {\r\n        this.selectedTelefoni = undefined;\r\n    }\r\n\r\n    updatePrezencaFollowing = (username: string) => {\r\n        this.telefoniRegistry.forEach(telefoni => {\r\n            telefoni.telefonatPrezencat.forEach(telefoniPrezenca =>{\r\n                if(telefoniPrezenca.username === username){\r\n                    telefoniPrezenca.following ? telefoniPrezenca.followersCount-- : telefoniPrezenca.followersCount++;\r\n                    telefoniPrezenca.following = !telefoniPrezenca.following;\r\n                }\r\n            })\r\n        })\r\n    }\r\n}","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore{\r\n    user: User | null = null;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    get isLoggedIn(){\r\n        return !!this.user;\r\n    }\r\n\r\n    login = async ( creds: UserFormValues) => {\r\n        try{\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push('/telefonat');\r\n            store.modalStore.closeModal();\r\n        } catch (error){\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push('/');\r\n    }\r\n\r\n    getUser = async () => {\r\n        try {\r\n            const user = await agent.Account.current();\r\n            runInAction(() => this.user = user);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    register = async (creds: UserFormValues) => {\r\n        try{\r\n            const user = await agent.Account.register(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push('/telefonat');\r\n            store.modalStore.closeModal();\r\n        } catch (error){\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    setImage = (image: string) => {\r\n        if(this.user) this.user.image = image;\r\n    }\r\n\r\n    setDisplayName = (name: string) => {\r\n        if (this.user) this.user.displayName = name;\r\n        }\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserTelefoni } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n    profile: Profile | null = null;\r\n    loadingProfile = false;\r\n    uploading = false;\r\n    loading = false;\r\n    followings: Profile[] = [];\r\n    loadingFollowings: boolean = false;\r\n    activeTab = 0;\r\n    userTelefonat: UserTelefoni[] = [];\r\n    loadingTelefonat = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(() => this.activeTab,\r\n            activeTab => {\r\n                if(activeTab === 3 || activeTab === 4){\r\n                    const predicate = activeTab ===3 ? 'followers' : 'following';\r\n                    this.loadFollowings(predicate);\r\n                }else{\r\n                    this.followings = [];\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setActiveTab = (activeTab: any) =>{\r\n        this.activeTab = activeTab;\r\n    }\r\n\r\n    get isCurrentUser() {\r\n        if (store.userStore.user && this.profile) {\r\n            return store.userStore.user.username === this.profile.username;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    loadProfile = async (username: string) => {\r\n        this.loadingProfile = true;\r\n        try {\r\n            const profile = await agent.Profiles.get(username);\r\n            runInAction(() => {\r\n                this.profile = profile;\r\n                this.loadingProfile = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loadingProfile = false);\r\n        }\r\n    }\r\n\r\n    uploadPhoto = async (file: Blob) => {\r\n        this.uploading = true;\r\n        try {\r\n            const response = await agent.Profiles.uploadPhoto(file);\r\n            const photo = response.data;\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos?.push(photo);\r\n                    if (photo.isMain && store.userStore.user) {\r\n                        store.userStore.setImage(photo.url);\r\n                        this.profile.image = photo.url;\r\n                    }\r\n                }\r\n                this.uploading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(() => this.uploading = false);\r\n        }\r\n    }\r\n\r\n    setMainPhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.setMainPhoto(photo.id);\r\n            store.userStore.setImage(photo.url);\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.photos) {\r\n                    this.profile.photos.find(p => p.isMain)!.isMain = false;\r\n                    this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\r\n                    this.profile.image = photo.url;\r\n                    this.loading = false;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => this.loading = false);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    deletePhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.deletePhoto(photo.id);\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\r\n                    this.loading = false;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => { this.loading = false });\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    updateProfile = async (profile: Partial<Profile>) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.updateProfile(profile);\r\n            runInAction(() => {\r\n                if (profile.displayName && profile.displayName !==\r\n                    store.userStore.user?.displayName) {\r\n                    store.userStore.setDisplayName(profile.displayName);\r\n                }\r\n                this.profile = { ...this.profile, ...profile as Profile };\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    updateFollowing = async (username: string, following: boolean) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.updateFollowing(username);\r\n            store.telefoniStore.updatePrezencaFollowing(username);\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username === username) {\r\n                    following ? this.profile.followersCount++ : this.profile.followersCount--;\r\n                    this.profile.following = !this.profile.following;\r\n                }\r\n\r\n                if(this.profile && this.profile.username === store.userStore.user?.username){\r\n                    following ? this.profile.followingCount++ : this.profile.followingCount--;\r\n                }\r\n                this.followings.forEach(profile => {\r\n                    if (profile.username === username) {\r\n                        profile.following ? profile.followersCount-- : profile.followersCount++;\r\n                        profile.following = !profile.following;\r\n                    }\r\n                })\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loading = false);\r\n\r\n        }\r\n    }\r\n\r\n    loadFollowings = async (predicate: string) => {\r\n        this.loadingFollowings = true;\r\n        try {\r\n            const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\r\n            runInAction(() => {\r\n                this.followings = followings;\r\n                this.loadingFollowings = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loadingFollowings = false);\r\n        }\r\n    }\r\n\r\n    loadUserTelefonat = async (username: string, predicate?: string) => {\r\n        this.loadingTelefonat = true;\r\n        try {\r\n        const telefonat = await agent.Profiles.listTelefonat(username,\r\n        predicate!);\r\n        runInAction(() => {\r\n        this.userTelefonat = telefonat;\r\n        this.loadingTelefonat = false;\r\n        })\r\n        } catch (error) {\r\n        console.log(error);\r\n        runInAction(() => {\r\n        this.loadingTelefonat = false;\r\n        })\r\n        }\r\n        }\r\n}","import { createContext, useContext } from \"react\";\r\nimport CommonStore from \"./commonStore\";\r\nimport TelefoniStore from \"./telefoniStore\";\r\nimport UserStore from \"./userStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport CommentStore from \"./commentStore\";\r\n\r\ninterface Store{\r\n    telefoniStore: TelefoniStore;\r\n    commonStore: CommonStore;\r\n    userStore: UserStore;\r\n    modalStore: ModalStore;\r\n    profileStore: ProfileStore;\r\n    commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n    telefoniStore: new TelefoniStore(),\r\n    commonStore: new CommonStore(),\r\n    userStore: new UserStore(),\r\n    modalStore: new ModalStore(),\r\n    profileStore: new ProfileStore(),\r\n    commentStore: new CommentStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore(){\r\n    return useContext(StoreContext);\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore{\r\n    error: ServerError | null = null;\r\n    token: string | null = window.localStorage.getItem('jwt');\r\n    appLoaded = false;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.token,\r\n            token =>{\r\n                if(token){\r\n                    window.localStorage.setItem('jwt', token)\r\n                } else {\r\n                    window.localStorage.removeItem('jwt')\r\n                }\r\n            }\r\n        )\r\n}\r\n\r\n    setServerError = (error: ServerError) => {\r\n        this.error = error;\r\n    }\r\n\r\n    setToken = (token: string | null) => {\r\n        this.token = token;\r\n    }\r\n\r\n    setAppLoaded = () =>{\r\n        this.appLoaded = true;\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal{\r\n    open: boolean;\r\n    body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore{\r\n    modal: Modal = {\r\n        open: false,\r\n        body: null\r\n    }\r\n\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    openModal = (content: JSX.Element) => {\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n    \r\n    closeModal = () => {\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore{\r\n    comments: ChatComment[] = [];\r\n    hubConnection: HubConnection | null = null;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    createHubConnection = (telefoniId: string) => {\r\n        if(store.telefoniStore.selectedTelefoni){\r\n            this.hubConnection = new HubConnectionBuilder().withUrl(process.env.REACT_APP_CHAT_URL + '?telefoniId=' + telefoniId,{\r\n                accessTokenFactory: () => store.userStore.user?.token!\r\n            })\r\n            .withAutomaticReconnect()\r\n            .configureLogging(LogLevel.Information)\r\n            .build();\r\n\r\n            this.hubConnection.start().catch(error => console.log('Error establishing the connection: ', error));\r\n\r\n            this.hubConnection.on('LoadComments', (comments: ChatComment[]) =>{\r\n                runInAction(() => {\r\n                    comments.forEach(comment => {\r\n                        comment.createdAt = new Date(comment.createdAt + 'Z');\r\n                    })\r\n                    this.comments = comments\r\n                });\r\n            })\r\n\r\n            this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\r\n                runInAction(() => {\r\n                    comment.createdAt = new Date(comment.createdAt);\r\n                    this.comments.unshift(comment)\r\n                });\r\n            })\r\n        }\r\n    }\r\n    stopHubConnection = () => {\r\n        this.hubConnection?.stop().catch(error => console.log('Error stopping connection', error));\r\n    }\r\n\r\n    clearComents = () => {\r\n        this.comments = [];\r\n    this.stopHubConnection();\r\n    }\r\n\r\n    addComment = async (values: any) => {\r\n        values.telefoniId = store.telefoniStore.selectedTelefoni?.id;\r\n        try {\r\n            await this.hubConnection?.invoke('SendComment', values);\r\n        } catch (error) {\r\n            console.log(error);\r\n            }\r\n    }\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Dropdown, Menu, Image} from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default observer (function NavBar() {\r\n  const {userStore: {user, logout}} = useStore();\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item as={NavLink} to=\"/\" exact header>\r\n          <img src=\"/assets/logo.png\" alt=\"logo\" style={{ marginRight: \"10px\" }}/>\r\n          Tech E-Commerce\r\n        </Menu.Item>\r\n      </Container>\r\n\r\n      <Menu.Item as={NavLink} to=\"/telefonat\" name=\"Telefonat\"/>\r\n      <Button as={NavLink} to=\"/createTelefoni\" style={{backgroundColor: \"#AEB6BF\"}} content=\"Krijo Telefonin\"/>\r\n      <Menu.Item position='right'>\r\n        <Image src={user?.image || '/assets/user.png'} avatar spaced='right'/>\r\n        <Dropdown pointing='top right' text={user?.displayName}>\r\n          <Dropdown.Menu>\r\n          <Dropdown.Item as={Link} to={`/profiles/${user?.username}`} text='Profile' icon='user'/>\r\n          <Dropdown.Item onClick={logout} text='Logout' icon='power'/>\r\n          </Dropdown.Menu> \r\n        </Dropdown>\r\n      </Menu.Item>\r\n      {/* <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" /> */}\r\n    </Menu>\r\n  );\r\n})","import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props{\r\n    placeholder: string;\r\n    name: string;\r\n    type?: string;\r\n    label?: string;\r\n}\r\n\r\nexport default function MyTextInput (props: Props) {\r\n    const [field, meta] = useField(props.name);\r\n    \r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <input {...field} {...props}/>\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) :null}\r\n        </Form.Field>\r\n    )\r\n}\r\n","import { ErrorMessage, Form, Formik } from 'formik'\r\nimport { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Button, Header, Label } from 'semantic-ui-react'\r\nimport MyTextInput from '../../app/common/form/MyTextInput'\r\nimport { useStore } from '../../app/stores/store'\r\n\r\nexport default observer (function LoginForm () {\r\n    const {userStore} = useStore();\r\n    return (\r\n        <Formik initialValues={{email: '', password: '', error: null}} onSubmit={(values, {setErrors}) => \r\n        userStore.login(values).catch(error=> setErrors({error: 'E-mail ose Fjalëkalimi janë gabim!'}))}>\r\n            {({handleSubmit, isSubmitting, errors}) =>(\r\n                <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Identifikohu ne Tech E-Commerce' color='teal' textAlign='center'/>\r\n                    <MyTextInput name='email' placeholder='Email'/>\r\n                    <MyTextInput name='password' placeholder='Password' type='password'/>\r\n                    <ErrorMessage name='error' render={() => <Label style={{marginBottom: 10}} basic color='red' content={errors.error}/>}/>\r\n                    <Button loading={isSubmitting} positive content='Login' type='submit' fluid/>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})\r\n","import React from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    errors: any;\r\n}\r\n\r\nexport default function ValidationErrors ({errors}: Props){\r\n    return (\r\n        <Message error>\r\n            {errors && (\r\n                <Message.List>\r\n                    {errors.map((err: any, i: any) =>(\r\n                        <Message.Item key={i}>{err}</Message.Item>\r\n                    ))}\r\n                </Message.List>\r\n            )}\r\n        </Message>\r\n    )\r\n}\r\n","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport ValidationErrors from '../errors/ValidationErrors';\r\n\r\nexport default observer (function RegisterForm () {\r\n    const {userStore} = useStore();\r\n    return (\r\n        <Formik initialValues={{displayName:'', username: '',  email: '', password: '', error: null}} onSubmit={(values, {setErrors}) => \r\n        userStore.register(values).catch(error=> setErrors({error}))}\r\n        validationSchema={Yup.object({\r\n            displayName: Yup.string().required(),\r\n            username: Yup.string().required(),\r\n            email: Yup.string().required().email(),\r\n            password: Yup.string().required(),\r\n        })}>\r\n            {({handleSubmit, isSubmitting, errors, isValid, dirty}) =>(\r\n                <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Regjistrohu ne Tech E-Commerce' color='teal' textAlign='center'/>\r\n                    <MyTextInput name='displayName' placeholder='Display Name'/>\r\n                    <MyTextInput name='username' placeholder='Username'/>\r\n                    <MyTextInput name='email' placeholder='Email'/>\r\n                    <MyTextInput name='password' placeholder='Password' type='password'/>\r\n                    <ErrorMessage name='error' render={() => <ValidationErrors errors={errors.error}/>}/>\r\n                    <Button disabled={!isValid || !dirty || isSubmitting} loading={isSubmitting} positive content='Register' type='submit' fluid/>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Header, Segment, Image, Button} from 'semantic-ui-react'\r\nimport { useStore } from '../../app/stores/store';\r\nimport LoginForm from '../users/LoginForm';\r\nimport RegisterForm from '../users/RegisterForm';\r\n\r\n\r\nexport default observer(function HomePage () {\r\n    const {userStore, modalStore} = useStore();\r\n    return (\r\n       <Segment inverted textAlign='center' vertical className=\"masthead\">\r\n           <Container text>\r\n               <Header as='h1' inverted>\r\n                   <Image size=\"massive\" src='/assets/logo.png' alt=\"logo\" style={{marginBottom: 12}}/>\r\n                   Tech E-Commerce\r\n               </Header>\r\n               {userStore.isLoggedIn ? (\r\n                   <>\r\n                   <Header as='h2' inverted content='Miresevini ne Tech E-Commerce!'/>\r\n                   <Button as={Link} to=\"/telefonat\" size='huge' inverted>Shko tek produktet!</Button>\r\n                   </>\r\n               ): (\r\n                   <>\r\n                   <Button onClick={() => modalStore.openModal(<LoginForm/>)} size='huge' inverted>Sign In</Button>\r\n                   <Button onClick={() => modalStore.openModal(<RegisterForm/>)} size='huge' inverted>Sign Up</Button>\r\n                   </>\r\n               )}\r\n           </Container>\r\n       </Segment>\r\n    )\r\n})\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  inverted?: boolean;\r\n  content: string;\r\n}\r\n\r\nexport default function LoadingComponent({\r\n  inverted = true,\r\n  content = \"Loading...\",\r\n}: Props) {\r\n  return (\r\n    <Dimmer active={true} inverted={inverted}>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n}\r\n","import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props{\r\n    placeholder: string;\r\n    name: string;\r\n    rows: number;\r\n    label?: string;\r\n}\r\n\r\nexport default function MyTextArea (props: Props) {\r\n    const [field, meta] = useField(props.name);\r\n    \r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <textarea {...field} {...props}/>\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}\r\n","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { profile, updateProfile },\r\n  } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n      onSubmit={(values) => {\r\n        updateProfile(values).then(() => {\r\n          setEditMode(false);\r\n        });\r\n      }}\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ isSubmitting, isValid, dirty }) => (\r\n        <Form className=\"ui form\">\r\n          <MyTextInput placeholder=\"Display Name\" name=\"displayName\" />\r\n          <MyTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\r\n          <Button\r\n            positive\r\n            type=\"submit\"\r\n            loading={isSubmitting}\r\n            content=\"Update profile\"\r\n            floated=\"right\"\r\n            disabled={!isValid || !dirty}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\nimport { observer } from \"mobx-react-lite\";\r\nexport default observer(function ProfileAbout() {\r\n  const { profileStore } = useStore();\r\n  const { isCurrentUser, profile } = profileStore;\r\n  const [editMode, setEditMode] = useState(false);\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width=\"16\">\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={`About ${profile?.displayName}`}\r\n          />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={editMode ? \"Cancel\" : \"Edit Profile\"}\r\n              onClick={() => setEditMode(!editMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width=\"16\">\r\n          {editMode ? (\r\n            <ProfileEditForm setEditMode={setEditMode} />\r\n          ) : (\r\n            <span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n\r\n    const {profileStore, userStore} = useStore();\r\n    const {updateFollowing, loading} = profileStore;\r\n\r\n    if(userStore.user?.username === profile.username) return null;\r\n\r\n    function handleFollow(e: SyntheticEvent, username: string){\r\n        e.preventDefault();\r\n        profile.following ? updateFollowing(username, false) : updateFollowing(username, true);\r\n    }\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button fluid color=\"teal\" content={profile.following ? 'Following' : 'Not Following'} />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          basic\r\n          color={profile.following ? \"red\" : \"green\"}\r\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n          loading={loading}\r\n          onClick={(e) => handleFollow(e, profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\nexport default observer(function ProfileCard({ profile }: Props) {\r\n  function truncate(str: string | undefined) {\r\n    if (str) {\r\n      return str.length > 40 ? str.substring(0, 37) + \"...\" : str;\r\n    }\r\n  }\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || \"/assets/user.png\"} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount} {profile.followersCount === 1 ? 'Follower' : 'Followers'}\r\n      </Card.Content>\r\n      <FollowButton profile={profile}/>\r\n    </Card>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Card, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store'\r\nimport ProfileCard from './ProfileCard';\r\n\r\nexport default observer(function ProfileFollowings() {\r\n\r\n    const {profileStore} = useStore();\r\n    const {profile, followings, loadingFollowings, activeTab} = profileStore;\r\n\r\n    return (\r\n        <Tab.Pane loading={loadingFollowings}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='user'\r\n                    content={activeTab === 3 ? `People following ${profile?.displayName}`: `People that ${profile?.displayName} is following`}/>\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {followings.map(profile => (\r\n                            <ProfileCard key={profile.username} profile={profile}/>\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import React from 'react'\r\nimport { Cropper } from 'react-cropper'\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\ninterface Props{\r\n    imagePreview: string;\r\n    setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({imagePreview, setCropper}: Props) {\r\n    return (\r\n        <Cropper\r\n            src={imagePreview}\r\n            style={{height: 200, width: '100%'}}\r\n            initialAspectRatio={1}\r\n            aspectRatio={1}\r\n            preview='.img-preview'\r\n            guides={false}\r\n            viewMode={1}\r\n            autoCropArea={1}\r\n            background={false}\r\n            onInitialized={cropper => setCropper(cropper)}\r\n        />\r\n    )\r\n}\r\n","import React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport { Header, Icon } from 'semantic-ui-react'\r\n\r\ninterface Props{\r\n    setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({setFiles}: Props) {\r\n    const dzStyles = {\r\n        border: 'dashed 3px #eee',\r\n        borderColor: '#eee',\r\n        borderRadius: '5px',\r\n        paddingTop: '30px',\r\n        textAlign: 'center' as 'center',\r\n        height: 200\r\n    }\r\n\r\n    const dzActive = {\r\n        borderColor: 'green'\r\n    }\r\n\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    setFiles(acceptedFiles.map((file : any) => Object.assign(file,{\r\n        preview: URL.createObjectURL(file)\r\n    })))\r\n  }, [setFiles])\r\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n  return (\r\n    <div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}>\r\n      <input {...getInputProps()} />\r\n      <Icon name='upload' size='huge'/>\r\n      <Header content='Drop image here'/>\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Button, Grid, Header } from 'semantic-ui-react'\r\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\r\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone'\r\n\r\ninterface Props{\r\n    loading: boolean;\r\n    uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({loading, uploadPhoto}: Props) {\r\n    const [files, setFiles] = useState<any>([]);\r\n    const [cropper, setCropper] = useState<Cropper>();\r\n\r\n    function onCrop(){\r\n        if(cropper){\r\n            cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            files.forEach((file: any) => URL.revokeObjectURL(file.preview))\r\n        }\r\n    }, [files])\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 1 - Add Photo'/>\r\n                <PhotoWidgetDropzone setFiles={setFiles}/>\r\n            </Grid.Column>\r\n            <Grid.Column width={1}/>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 2 - Resize image'/>\r\n                {files && files.length > 0 && (\r\n                    <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview}/>\r\n                )}\r\n            </Grid.Column>\r\n            <Grid.Column width={1}/>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 3 - Preview & Upload Photo'/>\r\n                {files && files.length > 0 &&\r\n                <>\r\n                <div className='img-preview' style={{minHeight: 200, overflow: 'hidden'}}/>\r\n                <Button.Group widths={2}>\r\n                    <Button loading={loading} onClick={onCrop} positive icon='check'/>\r\n                    <Button disabled={loading} onClick={() => setFiles([])} icon='close'/>\r\n                </Button.Group>\r\n                </>}\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Card, Header, Tab, Image, Grid, Button } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n  const {\r\n    profileStore: { isCurrentUser, uploadPhoto, uploading, loading, setMainPhoto, deletePhoto},\r\n  } = useStore();\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState('');\r\n\r\n  function handlePhotoUpload(file: Blob) {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  }\r\n\r\n  function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>){\r\n    setTarget(e.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  }\r\n\r\n  function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>){\r\n    setTarget(e.currentTarget.name);\r\n    deletePhoto(photo);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading}/>\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map((photo) => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url} />\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2}>\r\n                        <Button basic\r\n                        color='green'\r\n                        content='Main'\r\n                        loading={target === 'main' + photo.id && loading}\r\n                        name={'main' + photo.id}\r\n                        disabled={photo.isMain}\r\n                        onClick={e => handleSetMainPhoto(photo, e)} />\r\n\r\n                        <Button\r\n                        basic\r\n                        color='red'\r\n                        icon='trash'\r\n                        loading={target === photo.id && loading}\r\n                        onClick={e => handleDeletePhoto(photo, e)}\r\n                        disabled={photo.isMain}\r\n                        name={photo.id} />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React, { SyntheticEvent, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserTelefoni } from \"../../app/models/profile\";\r\nimport { format } from \"date-fns\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nconst panes = [\r\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\r\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\r\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\r\n];\r\nexport default observer(function ProfileTelefonat() {\r\n  const { profileStore } = useStore();\r\n  const { loadUserTelefonat, profile, loadingTelefonat, userTelefonat } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadUserTelefonat(profile!.username);\r\n  }, [loadUserTelefonat, profile]);\r\n\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadUserTelefonat(\r\n      profile!.username,\r\n      panes[data.activeIndex as number].pane.key\r\n    );\r\n  };\r\n  return (\r\n    <Tab.Pane loading={loadingTelefonat}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content={\"Telefonat\"} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userTelefonat.map((telefoni: UserTelefoni) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/telefonat/${telefoni.id}`}\r\n                key={telefoni.id}\r\n              >\r\n                <Image\r\n                  src={`/assets/telefonat/${telefoni.kategoria}.png`}\r\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">{telefoni.emri}</Card.Header>\r\n                  <Card.Meta textAlign=\"center\">\r\n                    <div>{format(new Date(telefoni.data), \"do LLL\")}</div>\r\n                    <div>{format(new Date(telefoni.data), \"h:mm a\")}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\nimport ProfileTelefonat from \"./ProfileTelefonat\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n\r\n  const {profileStore} = useStore();\r\n\r\n  const panes = [\r\n    {menuItem: 'About', render: () => <ProfileAbout/>},\r\n    {menuItem: 'Photos', render: () => <ProfilePhotos profile={profile}/>},\r\n    {menuItem: 'Produktet', render: () => <ProfileTelefonat/>},\r\n    {menuItem: 'Followers', render: () => <ProfileFollowings/>},\r\n    {menuItem: 'Following', render: () => <ProfileFollowings/>},\r\n    ];\r\n\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Divider, Grid, Header, Item, Segment, Statistic } from 'semantic-ui-react'\r\nimport { Profile } from '../../app/models/profile'\r\nimport FollowButton from './FollowButton'\r\n\r\ninterface Props{\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer (function ProfileHeader ({profile}: Props){\r\n    return (\r\n        <Segment>\r\n            <Grid>\r\n                <Grid.Column width={12}>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Image avatar size='small' src={profile.image || '/assets/user.png'}/>\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Header as='h1' content={profile.displayName}/>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Statistic.Group width={2}>\r\n                        <Statistic label='Followers' value={profile.followersCount}/>\r\n                        <Statistic label='Following' value={profile.followingCount}/>\r\n                    </Statistic.Group>\r\n                    <Divider/>\r\n                    <FollowButton profile={profile}/>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n})","import { observer } from 'mobx-react-lite'\r\nimport React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport LoadingComponent from '../../app/layout/LoadingComponent'\r\nimport { useStore } from '../../app/stores/store'\r\nimport ProfileContent from './ProfileContent'\r\nimport ProfileHeader from './ProfileHeader'\r\n\r\nexport default observer (function ProfilePage (){\r\n    const {username} = useParams<{username: string}>();\r\n    const {profileStore} = useStore();\r\n    const {loadingProfile, loadProfile, profile, setActiveTab} = profileStore;\r\n\r\n    useEffect(()=>{\r\n        loadProfile(username);\r\n        return () => {\r\n            setActiveTab(0);\r\n        }\r\n    },[loadProfile, username, setActiveTab])\r\n\r\n    if(loadingProfile) return <LoadingComponent content='Te dhenat e profilit jane duke u hapur'/>\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={16}>\r\n                {profile &&\r\n                <>\r\n                <ProfileHeader profile={profile}/>\r\n                <ProfileContent profile={profile}/>\r\n                </>}\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport Calendar from 'react-calendar'\r\nimport { Header, Menu } from 'semantic-ui-react'\r\nimport { useStore } from '../../../app/stores/store'\r\n\r\nexport default observer (function TelefoniFilters () {\r\n\r\n    const {telefoniStore: {predicate, setPredicate}} = useStore();\r\n\r\n    return (\r\n        <>\r\n        <Menu vertical size='large' style={{width: '100%', marginTop: 28}}>\r\n            <Header icon='filter' attached color='teal' content=\"Filters\"/>\r\n            <Menu.Item content=\"Te gjithe Telefonat\" active={predicate.has('all')} onClick={() => setPredicate('all', 'true')}/>\r\n            <Menu.Item content=\"I am Interesed\" active={predicate.has('isInteresed')} onClick={() => setPredicate('isInteresed', 'true')}/>\r\n            <Menu.Item content=\"I am hosting\" active={predicate.has('isHost')} onClick={() => setPredicate('isHost', 'true')}/>\r\n        </Menu>\r\n        <Header/>\r\n        <Calendar onChange={(data) => setPredicate('startDate', data as Date)}\r\n        value={predicate.get('startDate') || new Date()}/>\r\n        </>\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { List, Image, Popup} from 'semantic-ui-react';\r\nimport { Profile } from '../../../app/models/profile';\r\nimport ProfileCard from '../../profiles/ProfileCard';\r\n\r\ninterface Props{\r\n    telefonatPrezencat: Profile[];\r\n}\r\n\r\nexport default observer(function TelefoniListItemPrezenca({telefonatPrezencat}: Props){\r\n\r\n    const styles ={\r\n        borderColor: 'orange',\r\n        borderWidth: 3\r\n    }\r\n\r\n    return (\r\n        <List horizontal>\r\n            {telefonatPrezencat.map(telefonatPrezenca=>(\r\n                <Popup hoverable key={telefonatPrezenca.username}\r\n                trigger={\r\n                <List.Item key={telefonatPrezenca.username} as={Link} to={`/profiles/${telefonatPrezenca.username}`}>\r\n                    <Image size='mini' circular src={telefonatPrezenca.image || '/assets/user.png'} bordered style={telefonatPrezenca.following ? styles : null}/>\r\n                </List.Item>}>\r\n                    <Popup.Content>\r\n                        <ProfileCard profile={telefonatPrezenca}/>\r\n                    </Popup.Content>\r\n                </Popup>\r\n                \r\n            ))}\r\n        </List>\r\n    )\r\n})\r\n","import { format } from \"date-fns\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Telefoni } from \"../../../app/models/telefoni\";\r\nimport TelefoniListItemPrezenca from \"./TelefoniListItemPrezenca\";\r\n\r\ninterface Props {\r\n  telefoni: Telefoni;\r\n}\r\n\r\nexport default function TelefoniListItem({ telefoni }: Props) {\r\n\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {telefoni.isCancelled && <Label attached=\"top\" color=\"red\" content='Canceled' style={{textAlign: 'center'}}/>}\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image style={{marginBottom: 5}} size=\"tiny\" circular src={telefoni.host?.image || \"/assets/user.png\"} />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/telefonat/${telefoni.id}`}>\r\n                {telefoni.emri}\r\n              </Item.Header>\r\n              <Item.Description>Hosted by <Link to={`/profiles/${telefoni.hostUsername}`}>{telefoni.host?.displayName}</Link></Item.Description>\r\n              {telefoni.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color='orange'>\r\n                    Ju jeni Host per kete produkt\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n              {telefoni.isInteresed && !telefoni.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color='green'>\r\n                    Ju jeni duke shikuar kete produkt\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name=\"clock\" />\r\n          {format(telefoni.data!, 'dd, MMM yyyy h:mm aa')} <br />\r\n          <Icon name=\"shopping basket\" />\r\n          {telefoni.kategoria} <br />\r\n          <Icon name=\"euro sign\" />\r\n          {telefoni.cmimi}\r\n        </span>\r\n      </Segment>\r\n        <Segment secondary>\r\n          <TelefoniListItemPrezenca telefonatPrezencat={telefoni.telefonatPrezencat!}/>\r\n        </Segment>\r\n      <Segment clearing>\r\n        <span>{telefoni.pershkrimi}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/telefonat/${telefoni.id}`}\r\n          color=\"teal\"\r\n          floated=\"right\"\r\n          content=\"View\"\r\n        ></Button>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport TelefoniListItem from \"./TelefoniListItem\";\r\n\r\nexport default observer(function TelefoniList() {\r\n  const { telefoniStore } = useStore();\r\n  const { groupedTelefonat } = telefoniStore;\r\n\r\n  //style={{marginLeft:\"30%\", width:\"100%\"}}\r\n  return (\r\n    <>\r\n      {groupedTelefonat.map(([group, telefonat]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color=\"teal\">\r\n            {group}\r\n          </Header>\r\n          {telefonat.map((telefoni) => (\r\n            <TelefoniListItem key={telefoni.id} telefoni={telefoni} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function TelefoniListItemPlaceholder() {\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={{ marginTop: 25 }}>\r\n                <Segment.Group>\r\n                    <Segment style={{ minHeight: 110 }}>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={{ minHeight: 70 }} />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content='View' />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport TelefoniFilters from \"./TelefoniFilters\";\r\nimport TelefoniList from \"./TelefoniList\";\r\nimport TelefoniListItemPlaceholder from \"./TelefoniListItemPlaceholder\";\r\n\r\nexport default observer(function TelefoniDashboard() {\r\n  const { telefoniStore } = useStore();\r\n  const { loadTelefonat, telefoniRegistry, setPagingParams, pagination } =\r\n    telefoniStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadTelefonat().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (telefoniRegistry.size <= 1) loadTelefonat();\r\n  }, [telefoniRegistry.size, loadTelefonat]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        {telefoniStore.loadingInitial && !loadingNext ? (\r\n          <>\r\n            <TelefoniListItemPlaceholder/>\r\n            <TelefoniListItemPlaceholder/>\r\n          </>\r\n        ):(\r\n          <InfiniteScroll pageStart={0} loadMore={handleGetNext}\r\n        hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages} initialLoad={false}>\r\n          <TelefoniList />\r\n        </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <TelefoniFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext}/>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { Formik, Form, Field, FieldProps } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Segment, Header, Comment, Loader} from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport { formatDistanceToNow } from 'date-fns';\r\n\r\ninterface Props{ \r\n    telefoniId: string;\r\n}\r\n\r\nexport default observer(function TelefoniDetailedChat({telefoniId}: Props) {\r\n\r\n    const {commentStore} = useStore();\r\n\r\n    useEffect(() => {\r\n        if(telefoniId){\r\n            commentStore.createHubConnection(telefoniId);\r\n        }\r\n        return () => {\r\n            commentStore.clearComents();\r\n        }\r\n    }, [commentStore, telefoniId]);\r\n\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                attached='top'\r\n                inverted\r\n                color='teal'\r\n                style={{border: 'none'}}\r\n            >\r\n                <Header>Replies</Header>\r\n            </Segment>\r\n            <Segment attached clearing>\r\n            <Formik onSubmit={(values, {resetForm}) =>\r\n                    commentStore.addComment(values).then(() =>\r\n                    resetForm())} initialValues={{body: ''}} \r\n                    validationSchema={Yup.object({\r\n                        body: Yup.string().required()\r\n                    })}>\r\n                        {({isSubmitting, isValid, handleSubmit}) => (\r\n                            <Form className='ui form'>\r\n                                <Field name='body'>\r\n                                    {(props: FieldProps) => (\r\n                                        <div style={{position: 'relative'}}>\r\n                                            <Loader active={isSubmitting}/>\r\n                                            <textarea placeholder='Enter ypur comment (Enter to submit, ShIFT + Enter for the new line)'\r\n                                            rows={2} {...props.field}\r\n                                            onKeyPress={e => {\r\n                                                if(e.key === 'Enter' && e.shiftKey){\r\n                                                    return;\r\n                                                }\r\n                                                if(e.key === 'Enter' && !e.shiftKey){\r\n                                                    e.preventDefault();\r\n                                                    isValid && handleSubmit();\r\n                                                }\r\n                                            }}/>\r\n                                        </div>\r\n                                    )}\r\n                                </Field>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                <Comment.Group>\r\n                    {commentStore.comments.map(comment => (\r\n                        <Comment key={comment.id}>\r\n                            <Comment.Avatar src={ comment.image || '/assets/user.png'}/>\r\n                            <Comment.Content>\r\n                                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>{comment.displayName}</Comment.Author>\r\n                                <Comment.Metadata>\r\n                                    <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                                </Comment.Metadata>\r\n                                <Comment.Text style={{whiteSpace: 'pre-wrap'}}>{comment.body}</Comment.Text>\r\n                            </Comment.Content>\r\n                        </Comment>\r\n                    ))}\r\n\r\n                    \r\n                </Comment.Group>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\r\nimport { Telefoni } from \"../../../app/models/telefoni\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nconst telefoniImageStyle = {\r\n  filter: \"brightness(60%)\",\r\n};\r\n\r\nconst telefoniImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\ninterface Props {\r\n  telefoni: Telefoni;\r\n}\r\n\r\nexport default observer(function TelefoniDetailedHeader({ telefoni }: Props) {\r\n  const {telefoniStore: {updatePrezencen, loading, cancelTelefoniToggle}} = useStore();\r\n  return (\r\n    <Segment.Group style={{ width: \"75%\" }}>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        {telefoni.isCancelled &&\r\n          <Label style={{position: 'absolute', zIndex: 1000, left: -14, top: 20}}\r\n            ribbon color='red' content='Cancelled'/>\r\n        }\r\n        <Image\r\n          src={`/assets/telefonat/${telefoni.kategoria}.png`}\r\n          fluid\r\n          style={telefoniImageStyle}\r\n        />\r\n        <Segment style={telefoniImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={telefoni.emri}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p>{format(telefoni.data!, \"dd MMM yyyy\")}</p>\r\n                <p>\r\n                  Hosted by <strong><Link to={`/pofiles/${telefoni.host?.username}`}>{telefoni.host?.displayName}</Link></strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {telefoni.isHost ? (\r\n          <>\r\n          <Button color={telefoni.isCancelled ? 'green' : 'red'} floated=\"left\"\r\n            basic content={telefoni.isCancelled ? 'Re-Aktivizo Telefonin' : 'Cancel Telefonin'}\r\n            onClick={cancelTelefoniToggle} loading={loading}/>\r\n          <Button\r\n            disabled={telefoni.isCancelled}\r\n            as={Link}\r\n            to={`/manage/${telefoni.id}`}\r\n            color=\"orange\"\r\n            floated=\"right\"\r\n          >\r\n            Menaxho Telefonin\r\n          </Button>\r\n          </>\r\n        ) : telefoni.isInteresed ? (\r\n          <Button loading={loading} onClick={updatePrezencen}>Anulo te shikuarit</Button>\r\n        ) : (\r\n          <Button disabled={telefoni.isCancelled} loading={loading}\r\n            onClick={updatePrezencen} color=\"teal\">Shiko Telefonin\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","\r\nimport { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\r\nimport {Telefoni} from \"../../../app/models/telefoni\";\r\n\r\ninterface Props {\r\n    telefoni: Telefoni\r\n}\r\n\r\nexport default observer(function TelefoniDetailedInfo({telefoni}: Props) {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment attached='top'>\r\n                <Grid>\r\n                    <Grid.Column width={1}>\r\n                        <Icon size='large' color='teal' name='info'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <p>{telefoni.kategoria}</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='calendar' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n            <span>\r\n              {format(telefoni.data!, 'dd MMM yyyy h:mm aa')}\r\n            </span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='shopping cart' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11}>\r\n                        <span>{telefoni.pershkrimi},<br /> {telefoni.cmimi+\"€\"}</span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","import React from 'react'\r\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Telefoni } from '../../../app/models/telefoni'\r\n\r\ninterface Props{\r\n    telefoni: Telefoni;\r\n}\r\n\r\nexport default observer(function TelefoniDetailedSidebar ({telefoni: {telefonatPrezencat, host}}: Props) {\r\n    if(!telefonatPrezencat) return null;\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                style={{ border: 'none' }}\r\n                attached='top'\r\n                secondary\r\n                inverted\r\n                color='teal'\r\n            >\r\n                {telefonatPrezencat.length} {telefonatPrezencat.length === 1 ? 'Person eshte' : 'Persona jane'} duke shikuar telefonin\r\n            </Segment>\r\n            <Segment attached>\r\n                <List relaxed divided>\r\n                    {telefonatPrezencat.map(telefonatPrezenca =>(\r\n                        <Item style={{ position: 'relative' }} key={telefonatPrezenca.username}>\r\n                            {telefonatPrezenca.username === host?.username &&\r\n                        <Label\r\n                            style={{ position: 'absolute' }}\r\n                            color='orange'\r\n                            ribbon='right'\r\n                        >\r\n                            Host\r\n                        </Label>}\r\n                        <Image size='tiny' src={telefonatPrezenca.image || '/assets/user.png'} />\r\n                        <Item.Content verticalAlign='middle'>\r\n                            <Item.Header as='h3'>\r\n                                <Link to={`/profiles/${telefonatPrezenca.username}`}>{telefonatPrezenca.displayName}</Link>\r\n                            </Item.Header>\r\n                            {telefonatPrezenca.following &&\r\n                            <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>}\r\n                        </Item.Content>\r\n                    </Item>\r\n                    ))}\r\n                </List>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport TelefoniDetailedChat from \"./TelefoniDetailedChat\";\r\nimport TelefoniDetailedHeader from \"./TelefoniDetailedHeader\";\r\nimport TelefoniDetailedInfo from \"./TelefoniDetailedInfo\";\r\nimport TelefoniDetailedSidebar from \"./TelefoniDetailedSidebar\";\r\n\r\nexport default observer(function TelefoniDetails() {\r\n  const { telefoniStore } = useStore();\r\n  const {\r\n    selectedTelefoni: telefoni,\r\n    loadTelefoni,\r\n    loadingInitial,\r\n    clearSelectedTelefoni\r\n  } = telefoniStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadTelefoni(id);\r\n    return () => clearSelectedTelefoni();\r\n  }, [id, loadTelefoni, clearSelectedTelefoni]);\r\n\r\n  if (loadingInitial || !telefoni)\r\n    return (\r\n      <LoadingComponent content={\"Te dhenat e telefonit jane duke u hapur!\"}/>\r\n    );\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <TelefoniDetailedHeader telefoni={telefoni}/>\r\n        <TelefoniDetailedInfo telefoni={telefoni}/>\r\n        <TelefoniDetailedChat telefoniId={telefoni.id}/>\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <TelefoniDetailedSidebar telefoni={telefoni}/>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(e, d) => helpers.setValue(d.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","export const categoryOptionsTelefonat = [\r\n    {text:'13 Pro Max - Sierra Blue', value: 'iPhone 13 Pro Max Sierra Blue'},\r\n    {text:'13 Pro Max - Black', value: 'iPhone 13 Pro Max Black'},\r\n    {text:'X - Black', value: 'iPhone X Black'},\r\n    {text:'X - White', value: 'iPhone X White'},\r\n    {text:'7 - Rose', value: 'iPhone 7 Rose'}\r\n]","import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { Form, Label } from 'semantic-ui-react';\r\nimport DatePicker, {ReactDatePickerProps} from 'react-datepicker';\r\n\r\n\r\nexport default function MyDateInput (props: Partial<ReactDatePickerProps>) {\r\n    const [field, meta, helpers] = useField(props.name!);\r\n    \r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <DatePicker\r\n                {...field}\r\n                {...props}\r\n                selected={(field.value && new Date(field.value)) || null}\r\n                onChange={value => helpers.setValue(value)}\r\n            />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Button, Segment, Header } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\r\nimport { categoryOptionsTelefonat } from \"../../../app/common/options/CategoryOptions\";\r\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\r\nimport { TelefoniFormValues } from \"../../../app/models/telefoni\";\r\n\r\nexport default observer(function TelefoniForm() {\r\n  const history = useHistory();\r\n  const { telefoniStore } = useStore();\r\n  const { createTelefoni, updateTelefoni,\r\n    loadTelefoni, loadingInitial,} = telefoniStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const [telefoni, setTelefoni] = useState<TelefoniFormValues>(new TelefoniFormValues());\r\n\r\n  const validationSchema = Yup.object({\r\n    emri: Yup.string().required('Fusha per Emrin e telefonit është e nevojshme!'),\r\n    kategoria: Yup.string().required('Fusha per Kategorine e telefonit është e nevojshme!'),\r\n    data: Yup.string().required('Fusha per Datën e telefonit është e nevojshme!').nullable(),\r\n    brendi: Yup.string().required(),\r\n    pershkrimi: Yup.string().required(),\r\n    cmimi: Yup.number().required()\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (id) loadTelefoni(id).then(telefoni => setTelefoni(new TelefoniFormValues(telefoni)))\r\n  }, [id, loadTelefoni]);\r\n\r\n  function handleFormSubmit(telefoni: TelefoniFormValues) {\r\n    if (!telefoni.id) {\r\n      let newTelefoni = {\r\n        ...telefoni,\r\n        id: uuid(),\r\n      };\r\n      createTelefoni(newTelefoni).then(() =>\r\n        history.push(`/telefonat/${newTelefoni.id}`)\r\n      );\r\n    } else {\r\n      updateTelefoni(telefoni).then(() =>\r\n        history.push(`/telefonat/${telefoni.id}`)\r\n      );\r\n    }\r\n  }\r\n\r\n  if (loadingInitial) return <LoadingComponent content=\"Te dhenat e telefonit jane duke u hapur!\"/>\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content={\"Te Dhenat e Telefonit\"} sub color='teal'/>\r\n      <Formik validationSchema={validationSchema} enableReinitialize initialValues={telefoni} onSubmit={values => handleFormSubmit(values)}>\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form className='ui form' onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <MyTextInput name='emri' placeholder='Emri i Telefonit'/>\r\n            <MySelectInput options={categoryOptionsTelefonat} placeholder=\"Kategoria e Telefonit\" name=\"kategoria\"/>\r\n            <MyTextInput placeholder=\"Brendi i Telefonit\" name=\"brendi\"/>\r\n            <MyDateInput  placeholderText=\"Data\" name=\"data\" showTimeSelect timeCaption='time' dateFormat='d MMMM, yyyy h:mm aa'/>\r\n            <MyTextArea rows={3} placeholder=\"Pershkrimi i Telefonit\" name=\"pershkrimi\"/>\r\n            <MyTextInput placeholder=\"Cmimi i Telefonit\" name=\"cmimi\"/>\r\n            <Button disabled={isSubmitting || !dirty || !isValid} loading={isSubmitting} floated=\"right\" positive type=\"submit\" content=\"Submit\"/>\r\n            <Button as={Link} to='/telefonat' floated=\"right\" type=\"button\" content=\"Cancel\"/>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n});\r\n","import React, { useState } from 'react';\r\nimport {Button, Header, Segment} from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport ValidationErrors from './ValidationErrors';\r\n\r\nexport default function TestErrors() {\r\n    const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n    const [errors, setErrors] = useState(null);\r\n\r\n    function handleNotFound() {\r\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get(baseUrl + 'telefonat/notaguid').catch(err => console.log(err));\r\n    }\r\n\r\n    function handleValidationError() {\r\n        axios.post(baseUrl + 'telefonat', {}).catch(err => setErrors(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header as='h1' content='Test Error component' />\r\n            <Segment>\r\n                <Button.Group widths='7'>\r\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </Button.Group>\r\n            </Segment>\r\n            {errors && \r\n            <ValidationErrors errors={errors}/>}\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react'\r\n\r\nexport default function NotFound (){\r\n    return (\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search'/>\r\n                Oops - nuk gjetem ate qe po kerkoni!\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/telefonat' primary>\r\n                    Kthehu tek telefonat\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Container, Header, Segment } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nexport default observer(function ServerError (){\r\n    const {commonStore} = useStore();\r\n\r\n    return(\r\n        <Container>\r\n            <Header as='h1' content='Server Error'/>\r\n            <Header sub as='h5' color='red' content={commonStore.error?.message}/>\r\n            {commonStore.error?.details &&\r\n            <Segment>\r\n                <Header as='h4' content='Stack trace' color='teal'/>\r\n                <code style={{marginTop: '10px'}}>{commonStore.error.details}</code>\r\n            </Segment>\r\n            }\r\n        </Container>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStore } from '../../stores/store'\r\n\r\nexport default observer (function ModalContainer() {\r\n\r\n    const {modalStore} = useStore();\r\n\r\n    return(\r\n    <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini' style={{width: '500px'}}>\r\n        <Modal.Content>\r\n            {modalStore.modal.body}\r\n        </Modal.Content>\r\n    </Modal>\r\n    )\r\n})","import React from 'react'\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from 'react-router-dom';\r\nimport { useStore } from '../stores/store'\r\n\r\ninterface Props extends RouteProps{\r\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({component: Component, ...rest}: Props) {\r\n\r\n    const{userStore: {isLoggedIn}} = useStore();\r\n\r\n    return (\r\n        <Route {...rest} render={(props) => isLoggedIn ? <Component {...props}/> : <Redirect to='/'/>}/>\r\n    )\r\n}\r\n","//Others\nimport React, { useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport { observer } from \"mobx-react-lite\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\n\n//HomePage\nimport HomePage from \"../../features/home/HomePage\";\n\n//Profile\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\n\n//Telefonat\nimport TelefoniDashboard from \"../../features/telefonat/dashboard/TelefoniDashboard\";\nimport TelefoniDetails from \"../../features/telefonat/details/TelefoniDetails\";\nimport TelefoniForm from \"../../features/telefonat/form/TelefoniForm\";\n\n//Errors\nimport TestErrors from \"../../features/errors/TestError\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport { useStore } from \"../stores/store\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded)\n    return <LoadingComponent content=\"Loading app...\" />;\n\n  return (\n    <>\n      <ModalContainer />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <>\n            <ToastContainer position=\"bottom-right\" hideProgressBar />;\n            <NavBar />\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                <PrivateRoute exact path=\"/telefonat\" component={TelefoniDashboard}/>\n                <PrivateRoute path=\"/telefonat/:id\" component={TelefoniDetails}/>\n                <PrivateRoute key={location.key} path={[\"/createTelefoni\", \"/manage/:id\"]} component={TelefoniForm}/>\n                <PrivateRoute path=\"/profiles/:username\" component={ProfilePage}/>\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\n                \n                <Route path=\"/server-error\" component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport 'react-calendar/dist/Calendar.css'\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { Router } from \"react-router-dom\";\nimport {createBrowserHistory} from 'history';\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop/>\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}