{"version":3,"sources":["app/stores/commonStore.ts","app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/userStore.ts","app/stores/modalStore.ts","app/stores/profileStore.ts","app/stores/commentStore.ts","app/stores/store.ts","app/layout/NavBar.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityListItemPrezenca.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","app/common/form/MySelectInput.tsx","app/common/options/CategoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","app/layout/PrivateRoute.tsx","app/common/util/hoooks.ts","features/users/RegisterSuccess.tsx","features/users/ConfirmEmail.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["CommonStore","error","token","window","localStorage","getItem","appLoaded","setServerError","setToken","setAppLoaded","makeAutoObservable","this","reaction","setItem","removeItem","PaginatedResult","data","pagination","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","store","commonStore","headers","Authorization","response","a","JSON","parse","status","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","toast","startsWith","userStore","logout","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","activityPrezent","Account","current","login","user","register","fbLogin","accessToken","refreshToken","verifyEmail","email","resendEmailConfirm","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","emri","kategoria","brendi","pershkrimi","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","isInteresed","activitiesPrezencat","some","isHost","hostUsername","host","find","x","Date","state","createActivity","newActivity","updateActivity","updatedActivity","deleteActivity","updatePrezencen","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updatePrezencaFollowing","activityPrezenca","following","followersCount","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","UserStore","fbAccessToken","fbLoading","refreshTokenTimeout","creds","startRefreshTokenTimer","modalStore","closeModal","getUser","setImage","setDisplayName","name","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","stopRefreshTokenTimer","jwtToken","atob","split","timeout","exp","now","setTimeout","clearTimeout","ModalStore","modal","open","openModal","content","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","p","activityStore","followingCount","loadFollowings","loadUserActivities","CommentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComents","addComment","invoke","profileStore","commentStore","StoreContext","createContext","useStore","useContext","observer","isLoggedIn","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","backgroundColor","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","MyTextInput","props","useField","field","meta","Form","Field","touched","label","Label","basic","color","initialValues","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","Header","mobile","tablet","computer","textAlign","placeholder","type","render","marginBottom","positive","fluid","ValidationErrors","Message","List","map","err","i","validationSchema","Yup","required","isValid","dirty","disabled","Segment","vertical","size","Divider","horizontal","LoadingComponent","Dimmer","active","Loader","MyTextArea","setEditMode","bio","rows","floated","isCurrentUser","useState","Tab","Pane","Grid","Column","width","whiteSpace","Reveal","animated","Content","visible","hidden","e","preventDefault","handleFollow","Card","Description","str","length","substring","truncate","extra","Icon","Group","itemsPerRow","PhotoWidgetCropper","imagePreview","setCropper","height","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","border","borderColor","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","useEffect","revokeObjectURL","sub","minHeight","overflow","widths","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","panes","menuItem","pane","menu","secondary","onTabChange","activeIndex","handleTabChange","objectFit","Meta","menuPosition","verticalAlign","Statistic","useParams","marginTop","attached","has","onChange","styles","borderWidth","activitiesPrezenca","Popup","hoverable","trigger","circular","bordered","ActivityListItem","clearing","groupedActivities","group","ActivityListItemPlaceholder","Placeholder","Line","Paragraph","loadingNext","setLoadingNext","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","activityImageStyle","activityImageTextStyle","bottom","left","padding","zIndex","top","ribbon","relaxed","divided","Extra","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptionsActivities","MyDateInput","selected","useHistory","nullable","enableReinitialize","uuid","handleFormSubmit","placeholderText","showTimeSelect","timeCaption","dateFormat","TestErrors","baseUrl","primary","NotFound","Inline","message","Modal","onClose","PrivateRoute","Component","component","rest","useQuery","useLocation","search","RegisterSuccess","success","ConfirmEmail","Status","setStatus","handleConfirmEmailResend","getBody","location","finally","path","HomePage","hideProgressBar","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.0c51d410.chunk.js","sourcesContent":["import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore{\r\n    error: ServerError | null = null;\r\n    token: string | null = window.localStorage.getItem('jwt');\r\n    appLoaded = false;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.token,\r\n            token =>{\r\n                if(token){\r\n                    window.localStorage.setItem('jwt', token)\r\n                } else {\r\n                    window.localStorage.removeItem('jwt')\r\n                }\r\n            }\r\n        )\r\n}\r\n\r\n    setServerError = (error: ServerError) => {\r\n        this.error = error;\r\n    }\r\n\r\n    setToken = (token: string | null) => {\r\n        this.token = token;\r\n    }\r\n\r\n    setAppLoaded = () =>{\r\n        this.appLoaded = true;\r\n    }\r\n}","export interface Pagination{\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T>{\r\n    data: T;\r\n    pagination: Pagination;\r\n\r\n    constructor(data: T, pagination: Pagination){\r\n        this.data = data;\r\n        this.pagination = pagination;\r\n    }\r\n}\r\n\r\nexport class PagingParams{\r\n    pageNumber;\r\n    pageSize;\r\n\r\n    constructor(pageNumber = 1, pageSize = 2){\r\n        this.pageNumber = pageNumber;\r\n        this.pageSize = pageSize;\r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { store } from \"../stores/store\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay)\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.commonStore.token;\r\n    if (token) config.headers.Authorization = `Bearer ${token}`\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if (process.env.NODE_ENV === 'development') await sleep(1000);\r\n    const pagination = response.headers['pagination'];\r\n    if (pagination) {\r\n        response.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n        return response as AxiosResponse<PaginatedResult<any>>\r\n    }\r\n    return response;\r\n}, (error: AxiosError) => {\r\n    const { data, status, config, headers } = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n                history.push('/not-found');\r\n            }\r\n            if (data.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modalStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modalStateErrors.flat();\r\n            } else {\r\n                toast.error(data);\r\n            }\r\n            break;\r\n        case 401:\r\n            if (status === 401 && headers['www-authenticate']?.startsWith('Bearer error=\"invalid_token\"')) {\r\n                store.userStore.logout();\r\n                toast.error('Session expired - please login again');\r\n            }\r\n            break;\r\n        case 404:\r\n            history.push('/not-found');\r\n            break;\r\n        case 500:\r\n            store.commonStore.setServerError(data);\r\n            history.push('/server-error');\r\n            break;\r\n    }\r\n    return Promise.reject(error);\r\n})\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Activities = {\r\n    list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('/activities', {params}).then(responseBody),\r\n    details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n    create: (activity: ActivityFormValues) => requests.post<void>('/activities', activity),\r\n    update: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n    activityPrezent: (id: string) => requests.post<void>(`/activities/${id}/attend`,{})\r\n}\r\n\r\nconst Account = {\r\n    current: () => requests.get<User>('/account'),\r\n    login: (user: UserFormValues) => requests.post<User>('/account/login', user),\r\n    register: (user: UserFormValues) => requests.post<User>('/account/register', user),\r\n    fbLogin: (accessToken: string) => requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}),\r\n    refreshToken: () => requests.post<User>('/account/refreshToken', {}),\r\n    verifyEmail: (token: string, email: string) => requests.post<void>(`/account/verifyEmail?token=${token}&email=${email}`,{}),\r\n    resendEmailConfirm: (email: string) => requests.get(`/account/resendEmailConfirmationLink?email=${email}`)\r\n}\r\n\r\nconst Profiles = {\r\n    get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n    uploadPhoto: (file: Blob) =>{\r\n        let formData = new FormData();\r\n        formData.append('File', file);\r\n        return axios.post<Photo>('photos', formData, {\r\n            headers: {'Content-type': 'multipart/form-data'}\r\n        })\r\n    },\r\n    setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`,{}),\r\n    deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n    updateProfile: (profile: Partial<Profile>) => requests.put(`/profiles`, profile),\r\n    updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\r\n    listFollowings: (username: string, predicate: string) => requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n    listActivities: (username: string, predicate: string) => requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\r\n}\r\n\r\nconst agent = {\r\n    Activities, Account, Profiles\r\n}\r\n\r\nexport default agent;","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n    id: string;\r\n    emri: string;\r\n    kategoria: string;\r\n    brendi: string;\r\n    data: Date | null;\r\n    pershkrimi: string;\r\n    hostUsername: string;\r\n    isCancelled: boolean;\r\n    isInteresed: boolean;\r\n    isHost: boolean;\r\n    host?: Profile;\r\n    activitiesPrezencat: Profile[]\r\n}\r\n\r\nexport class Activity implements Activity{\r\n    constructor(init?: ActivityFormValues){\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport class ActivityFormValues{\r\n    id?: string = undefined;\r\n    emri: string = '';\r\n    kategoria: string = '';\r\n    brendi: string = '';\r\n    data: Date | null = null;\r\n    pershkrimi: string = '';\r\n\r\n    constructor(activity?: ActivityFormValues){\r\n        if(activity){\r\n            this.id = activity.id;\r\n            this.emri = activity.emri;\r\n            this.kategoria = activity.kategoria;\r\n            this.brendi = activity.brendi;\r\n            this.data = activity.data;\r\n            this.pershkrimi = activity.pershkrimi;\r\n        }\r\n    }\r\n}","import { User } from \"./user\";\r\n\r\nexport interface Profile{\r\n    username: string;\r\n    displayName: string;\r\n    image?: string;\r\n    bio?: string;\r\n    followersCount: number;\r\n    followingCount: number;\r\n    following: boolean;\r\n    photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile{\r\n    constructor(user: User){\r\n        this.username = user.username;\r\n        this.displayName = user.displayName;\r\n        this.image = user.image;\r\n    }\r\n}\r\nexport interface Photo{\r\n    id: string;\r\n    url: string;\r\n    isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n    id: string;\r\n    emri: string;\r\n    kategoria: string;\r\n    data: Date;\r\n    }","import { format } from \"date-fns\";\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\"\r\nimport agent from \"../api/agent\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\n\r\nexport default class ActivityStore {\r\n    activityRegistry = new Map<string, Activity>();\r\n    selectedActivity: Activity | undefined = undefined;\r\n    editMode = false;\r\n    loading = false;\r\n    loadingInitial = false;\r\n    pagination: Pagination | null = null;\r\n    pagingParams = new PagingParams();\r\n    predicate = new Map().set('all', true);\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n\r\n        reaction(() => this.predicate.keys(),\r\n        () => {\r\n            this.pagingParams = new PagingParams();\r\n            this.activityRegistry.clear();\r\n            this.loadActivities();\r\n        }\r\n    )\r\n    }\r\n\r\n    setPagingParams = (pagingParams: PagingParams) =>{\r\n        this.pagingParams = pagingParams;\r\n    }\r\n\r\n    setPredicate = (predicate: string, value: string | Date) =>{\r\n        const resetPredicate = () =>{\r\n            this.predicate.forEach((value, key) => {\r\n                if(key !== 'startDate') this.predicate.delete(key);\r\n            })\r\n        }\r\n        switch (predicate) {\r\n            case 'all':\r\n                resetPredicate();\r\n                this.predicate.set('all', true);\r\n                break;\r\n            case 'isInteresed':\r\n                resetPredicate();\r\n                this.predicate.set('isInteresed', true);\r\n                break;\r\n            case 'isHost':\r\n                resetPredicate();\r\n                this.predicate.set('isHost', true);\r\n                break;\r\n            case 'startDate':\r\n                this.predicate.delete('startDate');\r\n                this.predicate.set('startDate', value);\r\n        }\r\n    }\r\n\r\n    get axiosParams(){\r\n        const params = new URLSearchParams();\r\n        params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n        params.append('pageSize', this.pagingParams.pageSize.toString());\r\n        this.predicate.forEach((value, key) => {\r\n            if(key === 'startDate'){\r\n                params.append(key, (value as Date).toISOString())\r\n            } else {\r\n                params.append(key, value);\r\n            }\r\n        })\r\n        return params;\r\n    }\r\n\r\n    get activitiesByDate() {\r\n        return Array.from(this.activityRegistry.values()).sort((a, b) => a.data!.getTime() - b.data!.getTime());\r\n    }\r\n\r\n    get groupedActivities(){\r\n        return Object.entries(\r\n            this.activitiesByDate.reduce((activities, activity) =>{\r\n                const data = format(activity.data!, 'dd MMM yyy');\r\n                activities[data] = activities[data] ? [...activities[data], activity] : [activity]\r\n                return activities;\r\n            }, {} as {[key: string]: Activity[]})\r\n        )\r\n    }\r\n\r\n    loadActivities = async () => {\r\n        this.loadingInitial = true;\r\n        try {\r\n            const result = await agent.Activities.list(this.axiosParams);\r\n            result.data.forEach((activity) => {\r\n                this.setActivity(activity);\r\n            })\r\n            this.setPagination(result.pagination);\r\n            this.setLoadingInitial(false);\r\n        } catch (error) {\r\n            console.log(error)\r\n            this.setLoadingInitial(false);\r\n        }\r\n    }\r\n\r\n    setPagination = (pagination: Pagination) => {\r\n        this.pagination = pagination;\r\n    }\r\n\r\n    loadActivity = async (id: string) => {\r\n        let activity = this.getActivity(id);\r\n        if (activity) {\r\n            this.selectedActivity = activity;\r\n            return activity;\r\n        } else {\r\n            this.loadingInitial = true;\r\n            try {\r\n                activity = await agent.Activities.details(id);\r\n                this.setActivity(activity);\r\n                runInAction(() => {\r\n                    this.selectedActivity = activity;\r\n                })\r\n                this.setLoadingInitial(false);\r\n                return activity;\r\n            } catch (error) {\r\n                console.log(error);\r\n                this.setLoadingInitial(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setActivity = (activity: Activity) => {\r\n        const user = store.userStore.user;\r\n        if (user){\r\n            activity.isInteresed = activity.activitiesPrezencat!.some(\r\n                a => a.username === user.username\r\n            )\r\n            activity.isHost = activity.hostUsername === user.username;\r\n            activity.host = activity.activitiesPrezencat?.find(x => x.username === activity.hostUsername)\r\n        }\r\n        activity.data = new Date(activity.data!);\r\n        this.activityRegistry.set(activity.id, activity);\r\n    }\r\n\r\n    private getActivity = (id: string) => {\r\n        return this.activityRegistry.get(id);\r\n    }\r\n\r\n    setLoadingInitial = (state: boolean) => {\r\n        this.loadingInitial = state;\r\n    }\r\n\r\n    createActivity = async (activity: ActivityFormValues) => {\r\n        const user = store.userStore.user;\r\n        const activityPrezent = new Profile(user!);\r\n        try {\r\n            await agent.Activities.create(activity);\r\n            const newActivity = new Activity(activity);\r\n            newActivity.hostUsername = user!.username;\r\n            newActivity.activitiesPrezencat = [activityPrezent];\r\n            this.setActivity(newActivity);\r\n            runInAction(() => {\r\n                this.selectedActivity = newActivity;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    updateActivity = async (activity: ActivityFormValues) => {\r\n        try {\r\n            await agent.Activities.update(activity);\r\n            runInAction(() => {\r\n                if(activity.id){\r\n                    let updatedActivity = {...this.getActivity(activity.id), ...activity}\r\n                    this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n                    this.selectedActivity = updatedActivity as Activity;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    deleteActivity = async (id: string) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.delete(id);\r\n            runInAction(() => {\r\n                this.activityRegistry.delete(id);\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loading = false;\r\n            })\r\n        }\r\n    }\r\n\r\n    updatePrezencen = async () => {\r\n        const user = store.userStore.user;\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.activityPrezent(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                if(this.selectedActivity?.isInteresed){\r\n                    this.selectedActivity.activitiesPrezencat = this.selectedActivity.activitiesPrezencat?.filter(a => a.username !== user?.username);\r\n                    this.selectedActivity.isInteresed = false;\r\n                } else {\r\n                    const activityPrezent = new Profile(user!);\r\n                    this.selectedActivity?.activitiesPrezencat?.push(activityPrezent);\r\n                    this.selectedActivity!.isInteresed = true;\r\n                }\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!)\r\n            })\r\n        } catch (error) {\r\n            console.log(error)            \r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    cancelActivityToggle = async () => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.activityPrezent(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!)\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    clearSelectedActivity = () => {\r\n        this.selectedActivity = undefined;\r\n    }\r\n\r\n    updatePrezencaFollowing = (username: string) => {\r\n        this.activityRegistry.forEach(activity => {\r\n            activity.activitiesPrezencat.forEach(activityPrezenca =>{\r\n                if(activityPrezenca.username === username){\r\n                    activityPrezenca.following ? activityPrezenca.followersCount-- : activityPrezenca.followersCount++;\r\n                    activityPrezenca.following = !activityPrezenca.following;\r\n                }\r\n            })\r\n        })\r\n    }\r\n}","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore{\r\n    user: User | null = null;\r\n    fbAccessToken: string | null = null;\r\n    fbLoading = false;\r\n    refreshTokenTimeout: any;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    get isLoggedIn(){\r\n        return !!this.user;\r\n    }\r\n\r\n    login = async ( creds: UserFormValues) => {\r\n        try{\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            this.startRefreshTokenTimer(user);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        } catch (error){\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push('/');\r\n    }\r\n\r\n    getUser = async () => {\r\n        try {\r\n            const user = await agent.Account.current();\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            this.startRefreshTokenTimer(user);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    register = async (creds: UserFormValues) => {\r\n        try{\r\n            await agent.Account.register(creds);\r\n            history.push(`/account/registerSuccess?email=${creds.email}`);\r\n            store.modalStore.closeModal();\r\n        } catch (error){\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    setImage = (image: string) => {\r\n        if(this.user) this.user.image = image;\r\n    }\r\n\r\n    setDisplayName = (name: string) => {\r\n        if (this.user) this.user.displayName = name;\r\n    }\r\n\r\n    getFacebookLoginStatus = async () => {\r\n        window.FB.getLoginStatus(response => {\r\n            if(response.status === 'connected'){\r\n                this.fbAccessToken = response.authResponse.accessToken;\r\n            }\r\n        })\r\n    }\r\n\r\n    facebookLogin = () =>{\r\n        this.fbLoading = true;\r\n        const apiLogin = (accessToken: string) => {\r\n            agent.Account.fbLogin(accessToken).then(user => {\r\n                store.commonStore.setToken(user.token);\r\n                this.startRefreshTokenTimer(user);\r\n                runInAction(() => {\r\n                    this.user = user;\r\n                    this.fbLoading = false;\r\n                })\r\n                history.push('/activities')\r\n            }).catch(error => {\r\n                console.log(error);\r\n                runInAction(() => this.fbLoading = false);\r\n            })\r\n        }\r\n\r\n        if(this.fbAccessToken){\r\n            apiLogin(this.fbAccessToken);\r\n        }else{\r\n            window.FB.login(response =>{\r\n                apiLogin(response.authResponse.accessToken);\r\n            }, {scope: 'public_profile,email'})\r\n        }\r\n    }\r\n\r\n    refreshToken = async () => {\r\n        this.stopRefreshTokenTimer();\r\n        try {\r\n            const user = await agent.Account.refreshToken();\r\n            runInAction(() => this.user = user);\r\n            store.commonStore.setToken(user.token);\r\n            this.startRefreshTokenTimer(user);\r\n        } catch (error) {\r\n            console.log(error);   \r\n        }\r\n    }\r\n\r\n    private startRefreshTokenTimer(user: User){\r\n        const jwtToken = JSON.parse(atob(user.token.split('.')[1]));\r\n        const expires = new Date(jwtToken.exp * 1000);\r\n        const timeout = expires.getTime() - Date.now() - (30 * 1000);\r\n        this.refreshTokenTimeout = setTimeout(this.refreshToken, timeout);\r\n    }\r\n\r\n    private stopRefreshTokenTimer(){\r\n        clearTimeout(this.refreshTokenTimeout);\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal{\r\n    open: boolean;\r\n    body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore{\r\n    modal: Modal = {\r\n        open: false,\r\n        body: null\r\n    }\r\n\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    openModal = (content: JSX.Element) => {\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n    \r\n    closeModal = () => {\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n    profile: Profile | null = null;\r\n    loadingProfile = false;\r\n    uploading = false;\r\n    loading = false;\r\n    followings: Profile[] = [];\r\n    loadingFollowings: boolean = false;\r\n    activeTab = 0;\r\n    userActivities: UserActivity[] = [];\r\n    loadingActivities = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(() => this.activeTab,\r\n            activeTab => {\r\n                if(activeTab === 3 || activeTab === 4){\r\n                    const predicate = activeTab ===3 ? 'followers' : 'following';\r\n                    this.loadFollowings(predicate);\r\n                }else{\r\n                    this.followings = [];\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setActiveTab = (activeTab: any) =>{\r\n        this.activeTab = activeTab;\r\n    }\r\n\r\n    get isCurrentUser() {\r\n        if (store.userStore.user && this.profile) {\r\n            return store.userStore.user.username === this.profile.username;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    loadProfile = async (username: string) => {\r\n        this.loadingProfile = true;\r\n        try {\r\n            const profile = await agent.Profiles.get(username);\r\n            runInAction(() => {\r\n                this.profile = profile;\r\n                this.loadingProfile = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loadingProfile = false);\r\n        }\r\n    }\r\n\r\n    uploadPhoto = async (file: Blob) => {\r\n        this.uploading = true;\r\n        try {\r\n            const response = await agent.Profiles.uploadPhoto(file);\r\n            const photo = response.data;\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos?.push(photo);\r\n                    if (photo.isMain && store.userStore.user) {\r\n                        store.userStore.setImage(photo.url);\r\n                        this.profile.image = photo.url;\r\n                    }\r\n                }\r\n                this.uploading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(() => this.uploading = false);\r\n        }\r\n    }\r\n\r\n    setMainPhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.setMainPhoto(photo.id);\r\n            store.userStore.setImage(photo.url);\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.photos) {\r\n                    this.profile.photos.find(p => p.isMain)!.isMain = false;\r\n                    this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\r\n                    this.profile.image = photo.url;\r\n                    this.loading = false;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => this.loading = false);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    deletePhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.deletePhoto(photo.id);\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\r\n                    this.loading = false;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => { this.loading = false });\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    updateProfile = async (profile: Partial<Profile>) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.updateProfile(profile);\r\n            runInAction(() => {\r\n                if (profile.displayName && profile.displayName !==\r\n                    store.userStore.user?.displayName) {\r\n                    store.userStore.setDisplayName(profile.displayName);\r\n                }\r\n                this.profile = { ...this.profile, ...profile as Profile };\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    updateFollowing = async (username: string, following: boolean) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.updateFollowing(username);\r\n            store.activityStore.updatePrezencaFollowing(username);\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username === username) {\r\n                    following ? this.profile.followersCount++ : this.profile.followersCount--;\r\n                    this.profile.following = !this.profile.following;\r\n                }\r\n\r\n                if(this.profile && this.profile.username === store.userStore.user?.username){\r\n                    following ? this.profile.followingCount++ : this.profile.followingCount--;\r\n                }\r\n                this.followings.forEach(profile => {\r\n                    if (profile.username === username) {\r\n                        profile.following ? profile.followersCount-- : profile.followersCount++;\r\n                        profile.following = !profile.following;\r\n                    }\r\n                })\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loading = false);\r\n\r\n        }\r\n    }\r\n\r\n    loadFollowings = async (predicate: string) => {\r\n        this.loadingFollowings = true;\r\n        try {\r\n            const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\r\n            runInAction(() => {\r\n                this.followings = followings;\r\n                this.loadingFollowings = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loadingFollowings = false);\r\n        }\r\n    }\r\n\r\n    loadUserActivities = async (username: string, predicate?: string) => {\r\n        this.loadingActivities = true;\r\n        try {\r\n        const activities = await agent.Profiles.listActivities(username,\r\n        predicate!);\r\n        runInAction(() => {\r\n        this.userActivities = activities;\r\n        this.loadingActivities = false;\r\n        })\r\n        } catch (error) {\r\n        console.log(error);\r\n        runInAction(() => {\r\n        this.loadingActivities = false;\r\n        })\r\n        }\r\n        }\r\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore{\r\n    comments: ChatComment[] = [];\r\n    hubConnection: HubConnection | null = null;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    createHubConnection = (activityId: string) => {\r\n        if(store.activityStore.selectedActivity){\r\n            this.hubConnection = new HubConnectionBuilder().withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId,{\r\n                accessTokenFactory: () => store.userStore.user?.token!\r\n            })\r\n            .withAutomaticReconnect()\r\n            .configureLogging(LogLevel.Information)\r\n            .build();\r\n\r\n            this.hubConnection.start().catch(error => console.log('Error establishing the connection: ', error));\r\n\r\n            this.hubConnection.on('LoadComments', (comments: ChatComment[]) =>{\r\n                runInAction(() => {\r\n                    comments.forEach(comment => {\r\n                        comment.createdAt = new Date(comment.createdAt + 'Z');\r\n                    })\r\n                    this.comments = comments\r\n                });\r\n            })\r\n\r\n            this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\r\n                runInAction(() => {\r\n                    comment.createdAt = new Date(comment.createdAt);\r\n                    this.comments.unshift(comment)\r\n                });\r\n            })\r\n        }\r\n    }\r\n    stopHubConnection = () => {\r\n        this.hubConnection?.stop().catch(error => console.log('Error stopping connection', error));\r\n    }\r\n\r\n    clearComents = () => {\r\n        this.comments = [];\r\n    this.stopHubConnection();\r\n    }\r\n\r\n    addComment = async (values: any) => {\r\n        values.activityId = store.activityStore.selectedActivity?.id;\r\n        try {\r\n            await this.hubConnection?.invoke('SendComment', values);\r\n        } catch (error) {\r\n            console.log(error);\r\n            }\r\n    }\r\n}","import { createContext, useContext } from \"react\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport UserStore from \"./userStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport CommentStore from \"./commentStore\";\r\n\r\ninterface Store{\r\n    activityStore: ActivityStore;\r\n    commonStore: CommonStore;\r\n    userStore: UserStore;\r\n    modalStore: ModalStore;\r\n    profileStore: ProfileStore;\r\n    commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n    activityStore: new ActivityStore(),\r\n    commonStore: new CommonStore(),\r\n    userStore: new UserStore(),\r\n    modalStore: new ModalStore(),\r\n    profileStore: new ProfileStore(),\r\n    commentStore: new CommentStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore(){\r\n    return useContext(StoreContext);\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Dropdown, Menu, Image} from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default observer (function NavBar() {\r\n  const {userStore: {user, logout, isLoggedIn}} = useStore();\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item as={NavLink} to=\"/\" exact header>\r\n          <img src=\"/assets/logo.png\" alt=\"logo\" style={{ marginRight: \"10px\" }}/>\r\n          Tech E-Commerce\r\n        </Menu.Item>\r\n      </Container>\r\n\r\n      {isLoggedIn &&\r\n      <>\r\n      <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\"/>\r\n      <Button as={NavLink} to=\"/createActivity\" style={{backgroundColor: \"#AEB6BF\"}} content=\"Create Activity\"/>\r\n      <Menu.Item position='right'>\r\n        <Image src={user?.image || '/assets/user.png'} avatar spaced='right'/>\r\n        <Dropdown pointing='top right' text={user?.displayName}>\r\n          <Dropdown.Menu>\r\n          <Dropdown.Item as={Link} to={`/profiles/${user?.username}`} text='Profile' icon='user'/>\r\n          <Dropdown.Item onClick={logout} text='Logout' icon='power'/>\r\n          </Dropdown.Menu> \r\n        </Dropdown>\r\n      </Menu.Item>\r\n      </>}\r\n      {/* <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" /> */}\r\n    </Menu>\r\n  );\r\n})","import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props{\r\n    placeholder: string;\r\n    name: string;\r\n    type?: string;\r\n    label?: string;\r\n}\r\n\r\nexport default function MyTextInput (props: Props) {\r\n    const [field, meta] = useField(props.name);\r\n    \r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <input {...field} {...props}/>\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) :null}\r\n        </Form.Field>\r\n    )\r\n}\r\n","import { ErrorMessage, Form, Formik } from 'formik'\r\nimport { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Button, Header, Label } from 'semantic-ui-react'\r\nimport MyTextInput from '../../app/common/form/MyTextInput'\r\nimport { useStore } from '../../app/stores/store'\r\n\r\nexport default observer (function LoginForm () {\r\n    const {userStore} = useStore();\r\n    return (\r\n        <Formik initialValues={{email: '', password: '', error: null}} onSubmit={(values, {setErrors}) => \r\n        userStore.login(values).catch(error=> setErrors({error: error.response.data}))}>\r\n            {({handleSubmit, isSubmitting, errors}) =>(\r\n                <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header mobile={16} tablet={8} computer={5} as='h2' content='Sign In' color='teal' textAlign='center'/>\r\n                    <MyTextInput name='email' placeholder='Email'/>\r\n                    <MyTextInput name='password' placeholder='Password' type='password'/>\r\n                    <ErrorMessage name='error' render={() => <Label mobile={16} tablet={8} computer={5} style={{marginBottom: 10}} basic color='red' content={errors.error}/>}/>\r\n                    <Button mobile={16} tablet={8} computer={5} loading={isSubmitting} positive content='Sign in' type='submit' fluid/>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})\r\n","import React from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    errors: any;\r\n}\r\n\r\nexport default function ValidationErrors ({errors}: Props){\r\n    return (\r\n        <Message error>\r\n            {errors && (\r\n                <Message.List>\r\n                    {errors.map((err: any, i: any) =>(\r\n                        <Message.Item key={i}>{err}</Message.Item>\r\n                    ))}\r\n                </Message.List>\r\n            )}\r\n        </Message>\r\n    )\r\n}\r\n","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport ValidationErrors from '../errors/ValidationErrors';\r\n\r\nexport default observer (function RegisterForm () {\r\n    const {userStore} = useStore();\r\n    return (\r\n        <Formik initialValues={{displayName:'', username: '',  email: '', password: '', error: null}} onSubmit={(values, {setErrors}) => \r\n        userStore.register(values).catch(error=> setErrors({error}))}\r\n        validationSchema={Yup.object({\r\n            displayName: Yup.string().required(),\r\n            username: Yup.string().required(),\r\n            email: Yup.string().required().email(),\r\n            password: Yup.string().required(),\r\n        })}>\r\n            {({handleSubmit, isSubmitting, errors, isValid, dirty}) =>(\r\n                <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Sign Up' color='teal' textAlign='center'/>\r\n                    <MyTextInput name='displayName' placeholder='Display Name'/>\r\n                    <MyTextInput name='username' placeholder='Username'/>\r\n                    <MyTextInput name='email' placeholder='Email'/>\r\n                    <MyTextInput name='password' placeholder='Password' type='password'/>\r\n                    <ErrorMessage name='error' render={() => <ValidationErrors errors={errors.error}/>}/>\r\n                    <Button disabled={!isValid || !dirty || isSubmitting} loading={isSubmitting} positive content='Sign up' type='submit' fluid/>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Header, Segment, Image, Button, Divider} from 'semantic-ui-react'\r\nimport { useStore } from '../../app/stores/store';\r\nimport LoginForm from '../users/LoginForm';\r\nimport RegisterForm from '../users/RegisterForm';\r\n\r\n\r\nexport default observer(function HomePage () {\r\n    const {userStore, modalStore} = useStore();\r\n    return (\r\n       <Segment inverted textAlign='center' vertical className=\"masthead\">\r\n           <Container text>\r\n               <Header as='h1' inverted>\r\n                   <Image size=\"massive\" src='/assets/logo.png' alt=\"logo\" style={{marginBottom: 12}}/>\r\n                   Tech E-Commerce\r\n               </Header>\r\n               {userStore.isLoggedIn ? (\r\n                   <>\r\n                   <Header as='h2' inverted content='Welcome to Tech E-Commerce!'/>\r\n                   <Button as={Link} to=\"/activities\" size='huge' inverted>Go to Activities!</Button>\r\n                   </>\r\n               ): (\r\n                   <>\r\n                   <Button onClick={() => modalStore.openModal(<LoginForm/>)} size='huge' inverted>Sign In</Button>\r\n                   <Button onClick={() => modalStore.openModal(<RegisterForm/>)} size='huge' inverted>Sign Up</Button>\r\n                   <Divider horizontal inverted>\r\n                       Or\r\n                   </Divider>\r\n                   <Button loading={userStore.fbLoading} size='huge' inverted color='facebook' content=\"Log In with Facebook\" onClick={userStore.facebookLogin}/>\r\n                   </>\r\n               )}\r\n           </Container>\r\n       </Segment>\r\n    )\r\n})\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  inverted?: boolean;\r\n  content: string;\r\n}\r\n\r\nexport default function LoadingComponent({\r\n  inverted = true,\r\n  content = \"Loading...\",\r\n}: Props) {\r\n  return (\r\n    <Dimmer active={true} inverted={inverted}>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n}\r\n","import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props{\r\n    placeholder: string;\r\n    name: string;\r\n    rows: number;\r\n    label?: string;\r\n}\r\n\r\nexport default function MyTextArea (props: Props) {\r\n    const [field, meta] = useField(props.name);\r\n    \r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <textarea {...field} {...props}/>\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}\r\n","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { profile, updateProfile },\r\n  } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n      onSubmit={(values) => {\r\n        updateProfile(values).then(() => {\r\n          setEditMode(false);\r\n        });\r\n      }}\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ isSubmitting, isValid, dirty }) => (\r\n        <Form className=\"ui form\">\r\n          <MyTextInput placeholder=\"Display Name\" name=\"displayName\" />\r\n          <MyTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\r\n          <Button\r\n            positive\r\n            type=\"submit\"\r\n            loading={isSubmitting}\r\n            content=\"Update profile\"\r\n            floated=\"right\"\r\n            disabled={!isValid || !dirty}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\nimport { observer } from \"mobx-react-lite\";\r\nexport default observer(function ProfileAbout() {\r\n  const { profileStore } = useStore();\r\n  const { isCurrentUser, profile } = profileStore;\r\n  const [editMode, setEditMode] = useState(false);\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width=\"16\">\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={`About ${profile?.displayName}`}\r\n          />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={editMode ? \"Cancel\" : \"Edit Profile\"}\r\n              onClick={() => setEditMode(!editMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width=\"16\">\r\n          {editMode ? (\r\n            <ProfileEditForm setEditMode={setEditMode} />\r\n          ) : (\r\n            <span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n\r\n    const {profileStore, userStore} = useStore();\r\n    const {updateFollowing, loading} = profileStore;\r\n\r\n    if(userStore.user?.username === profile.username) return null;\r\n\r\n    function handleFollow(e: SyntheticEvent, username: string){\r\n        e.preventDefault();\r\n        profile.following ? updateFollowing(username, false) : updateFollowing(username, true);\r\n    }\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button fluid color=\"teal\" content={profile.following ? 'Following' : 'Not Following'} />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          basic\r\n          color={profile.following ? \"red\" : \"green\"}\r\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n          loading={loading}\r\n          onClick={(e) => handleFollow(e, profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\nexport default observer(function ProfileCard({ profile }: Props) {\r\n  function truncate(str: string | undefined) {\r\n    if (str) {\r\n      return str.length > 40 ? str.substring(0, 37) + \"...\" : str;\r\n    }\r\n  }\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || \"/assets/user.png\"} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount} {profile.followersCount === 1 ? 'Follower' : 'Followers'}\r\n      </Card.Content>\r\n      <FollowButton profile={profile}/>\r\n    </Card>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Card, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store'\r\nimport ProfileCard from './ProfileCard';\r\n\r\nexport default observer(function ProfileFollowings() {\r\n\r\n    const {profileStore} = useStore();\r\n    const {profile, followings, loadingFollowings, activeTab} = profileStore;\r\n\r\n    return (\r\n        <Tab.Pane loading={loadingFollowings}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='user'\r\n                    content={activeTab === 3 ? `People following ${profile?.displayName}`: `People that ${profile?.displayName} is following`}/>\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {followings.map(profile => (\r\n                            <ProfileCard key={profile.username} profile={profile}/>\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import React from 'react'\r\nimport { Cropper } from 'react-cropper'\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\ninterface Props{\r\n    imagePreview: string;\r\n    setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({imagePreview, setCropper}: Props) {\r\n    return (\r\n        <Cropper\r\n            src={imagePreview}\r\n            style={{height: 200, width: '100%'}}\r\n            initialAspectRatio={1}\r\n            aspectRatio={1}\r\n            preview='.img-preview'\r\n            guides={false}\r\n            viewMode={1}\r\n            autoCropArea={1}\r\n            background={false}\r\n            onInitialized={cropper => setCropper(cropper)}\r\n        />\r\n    )\r\n}\r\n","import React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport { Header, Icon } from 'semantic-ui-react'\r\n\r\ninterface Props{\r\n    setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({setFiles}: Props) {\r\n    const dzStyles = {\r\n        border: 'dashed 3px #eee',\r\n        borderColor: '#eee',\r\n        borderRadius: '5px',\r\n        paddingTop: '30px',\r\n        textAlign: 'center' as 'center',\r\n        height: 200\r\n    }\r\n\r\n    const dzActive = {\r\n        borderColor: 'green'\r\n    }\r\n\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    setFiles(acceptedFiles.map((file : any) => Object.assign(file,{\r\n        preview: URL.createObjectURL(file)\r\n    })))\r\n  }, [setFiles])\r\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n  return (\r\n    <div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}>\r\n      <input {...getInputProps()} />\r\n      <Icon name='upload' size='huge'/>\r\n      <Header content='Drop image here'/>\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Cropper } from 'react-cropper';\r\nimport { Button, Grid, Header } from 'semantic-ui-react'\r\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\r\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone'\r\n\r\ninterface Props{\r\n    loading: boolean;\r\n    uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({loading, uploadPhoto}: Props) {\r\n    const [files, setFiles] = useState<any>([]);\r\n    const [cropper, setCropper] = useState<Cropper>();\r\n\r\n    function onCrop(){\r\n        if(cropper){\r\n            cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            files.forEach((file: any) => URL.revokeObjectURL(file.preview))\r\n        }\r\n    }, [files])\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 1 - Add Photo'/>\r\n                <PhotoWidgetDropzone setFiles={setFiles}/>\r\n            </Grid.Column>\r\n            <Grid.Column width={1}/>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 2 - Resize image'/>\r\n                {files && files.length > 0 && (\r\n                    <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview}/>\r\n                )}\r\n            </Grid.Column>\r\n            <Grid.Column width={1}/>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 3 - Preview & Upload Photo'/>\r\n                {files && files.length > 0 &&\r\n                <>\r\n                <div className='img-preview' style={{minHeight: 200, overflow: 'hidden'}}/>\r\n                <Button.Group widths={2}>\r\n                    <Button loading={loading} onClick={onCrop} positive icon='check'/>\r\n                    <Button disabled={loading} onClick={() => setFiles([])} icon='close'/>\r\n                </Button.Group>\r\n                </>}\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport * as React from \"react\";\r\nimport {useState, SyntheticEvent}  from \"react\";\r\nimport { Card, Header, Tab, Image, Grid, Button } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n  const { profileStore: { isCurrentUser, uploadPhoto, uploading, loading, setMainPhoto, deletePhoto } } = useStore();\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState('');\r\n\r\n  function handlePhotoUpload(file: Blob) {\r\n      uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  }\r\n\r\n  function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n      setTarget(e.currentTarget.name);\r\n      setMainPhoto(photo);\r\n  }\r\n\r\n  function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n      setTarget(e.currentTarget.name);\r\n      deletePhoto(photo);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading}/>\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map((photo) => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url} />\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2}>\r\n                        <Button basic\r\n                        color='green'\r\n                        content='Main'\r\n                        loading={target === 'main' + photo.id && loading}\r\n                        name={'main' + photo.id}\r\n                        disabled={photo.isMain}\r\n                        onClick={e => handleSetMainPhoto(photo, e)} />\r\n\r\n                        <Button\r\n                        basic\r\n                        color='red'\r\n                        icon='trash'\r\n                        loading={target === photo.id && loading}\r\n                        onClick={e => handleDeletePhoto(photo, e)}\r\n                        disabled={photo.isMain}\r\n                        name={photo.id} />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React, { SyntheticEvent, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserActivity } from \"../../app/models/profile\";\r\nimport { format } from \"date-fns\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nconst panes = [\r\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\r\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\r\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\r\n];\r\nexport default observer(function ProfileActivities() {\r\n  const { profileStore } = useStore();\r\n  const { loadUserActivities, profile, loadingActivities, userActivities } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadUserActivities(profile!.username);\r\n  }, [loadUserActivities, profile]);\r\n\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadUserActivities(\r\n      profile!.username,\r\n      panes[data.activeIndex as number].pane.key\r\n    );\r\n  };\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivities.map((activity: UserActivity) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                key={activity.id}\r\n              >\r\n                <Image\r\n                  src={`/assets/activities/${activity.kategoria}.png`}\r\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">{activity.emri}</Card.Header>\r\n                  <Card.Meta textAlign=\"center\">\r\n                    <div>{format(new Date(activity.data), \"do LLL\")}</div>\r\n                    <div>{format(new Date(activity.data), \"h:mm a\")}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\nimport ProfileActivities from \"./ProfileActivities\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n\r\n  const {profileStore} = useStore();\r\n\r\n  const panes = [\r\n    {menuItem: 'About', render: () => <ProfileAbout/>},\r\n    {menuItem: 'Photos', render: () => <ProfilePhotos profile={profile}/>},\r\n    {menuItem: 'Activities', render: () => <ProfileActivities/>},\r\n    {menuItem: 'Followers', render: () => <ProfileFollowings/>},\r\n    {menuItem: 'Following', render: () => <ProfileFollowings/>},\r\n    ];\r\n\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Divider, Grid, Header, Item, Segment, Statistic } from 'semantic-ui-react'\r\nimport { Profile } from '../../app/models/profile'\r\nimport FollowButton from './FollowButton'\r\n\r\ninterface Props{\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer (function ProfileHeader ({profile}: Props){\r\n    return (\r\n        <Segment>\r\n            <Grid>\r\n                <Grid.Column width={12}>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Image avatar size='small' src={profile.image || '/assets/user.png'}/>\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Header as='h1' content={profile.displayName}/>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Statistic.Group width={2}>\r\n                        <Statistic label='Followers' value={profile.followersCount}/>\r\n                        <Statistic label='Following' value={profile.followingCount}/>\r\n                    </Statistic.Group>\r\n                    <Divider/>\r\n                    <FollowButton profile={profile}/>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n})","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport  { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport LoadingComponent from '../../app/layout/LoadingComponent'\r\nimport { useStore } from '../../app/stores/store'\r\nimport ProfileContent from './ProfileContent'\r\nimport ProfileHeader from './ProfileHeader'\r\n\r\nexport default observer (function ProfilePage (){\r\n    const {username} = useParams<{username: string}>();\r\n    const {profileStore} = useStore();\r\n    const {loadingProfile, loadProfile, profile, setActiveTab} = profileStore;\r\n\r\n    useEffect(()=>{\r\n        loadProfile(username);\r\n        return () => {\r\n            setActiveTab(0);\r\n        }\r\n    },[loadProfile, username, setActiveTab])\r\n\r\n    if(loadingProfile) return <LoadingComponent content='Loading Profile...'/>\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={16}>\r\n                {profile &&\r\n                <>\r\n                <ProfileHeader profile={profile}/>\r\n                <ProfileContent profile={profile}/>\r\n                </>}\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport Calendar from 'react-calendar'\r\nimport { Header, Menu } from 'semantic-ui-react'\r\nimport { useStore } from '../../../app/stores/store'\r\n\r\nexport default observer (function ActivityFilters () {\r\n\r\n    const {activityStore: {predicate, setPredicate}} = useStore();\r\n\r\n    return (\r\n        <>\r\n        <Menu vertical size='large' style={{width: '100%', marginTop: 28}}>\r\n            <Header icon='filter' attached color='teal' content=\"Filters\"/>\r\n            <Menu.Item content=\"All Activities\" active={predicate.has('all')} onClick={() => setPredicate('all', 'true')}/>\r\n            <Menu.Item content=\"I am Interesed\" active={predicate.has('isInteresed')} onClick={() => setPredicate('isInteresed', 'true')}/>\r\n            <Menu.Item content=\"I am hosting\" active={predicate.has('isHost')} onClick={() => setPredicate('isHost', 'true')}/>\r\n        </Menu>\r\n        <Header/>\r\n        <Calendar onChange={(data) => setPredicate('startDate', data as Date)}\r\n        value={predicate.get('startDate') || new Date()}/>\r\n        </>\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { List, Image, Popup} from 'semantic-ui-react';\r\nimport { Profile } from '../../../app/models/profile';\r\nimport ProfileCard from '../../profiles/ProfileCard';\r\n\r\ninterface Props{\r\n    activitiesPrezencat: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemPrezenca({activitiesPrezencat}: Props){\r\n\r\n    const styles ={\r\n        borderColor: 'orange',\r\n        borderWidth: 3\r\n    }\r\n\r\n    return (\r\n        <List horizontal>\r\n            {activitiesPrezencat.map(activitiesPrezenca=>(\r\n                <Popup hoverable key={activitiesPrezenca.username}\r\n                trigger={\r\n                <List.Item key={activitiesPrezenca.username} as={Link} to={`/profiles/${activitiesPrezenca.username}`}>\r\n                    <Image size='mini' circular src={activitiesPrezenca.image || '/assets/user.png'} bordered style={activitiesPrezenca.following ? styles : null}/>\r\n                </List.Item>}>\r\n                    <Popup.Content>\r\n                        <ProfileCard profile={activitiesPrezenca}/>\r\n                    </Popup.Content>\r\n                </Popup>\r\n                \r\n            ))}\r\n        </List>\r\n    )\r\n})\r\n","import { format } from \"date-fns\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport ActivityListItemPrezenca from \"./ActivityListItemPrezenca\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default function ActivityListItem({ activity }: Props) {\r\n\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {activity.isCancelled && <Label attached=\"top\" color=\"red\" content='Canceled' style={{textAlign: 'center'}}/>}\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image style={{marginBottom: 5}} size=\"tiny\" circular src={activity.host?.image || \"/assets/user.png\"} />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.emri}\r\n              </Item.Header>\r\n              <Item.Description>Hosted by <Link to={`/profiles/${activity.hostUsername}`}>{activity.host?.displayName}</Link></Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color='orange'>\r\n                    You are the Host of this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n              {activity.isInteresed && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color='green'>\r\n                    You are interesed for this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name=\"clock\" />\r\n          {format(activity.data!, 'dd, MMM yyyy h:mm aa')} <br />\r\n          <Icon name=\"shopping basket\" />\r\n          {activity.kategoria} <br />\r\n        </span>\r\n      </Segment>\r\n        <Segment secondary>\r\n          <ActivityListItemPrezenca activitiesPrezencat={activity.activitiesPrezencat!}/>\r\n        </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.pershkrimi}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          color=\"teal\"\r\n          floated=\"right\"\r\n          content=\"View\"\r\n        ></Button>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nexport default observer(function ActivityList() {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  //style={{marginLeft:\"30%\", width:\"100%\"}}\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color=\"teal\">\r\n            {group}\r\n          </Header>\r\n          {activities.map((activity) => (\r\n            <ActivityListItem key={activity.id} activity={activity} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={{ marginTop: 25 }}>\r\n                <Segment.Group>\r\n                    <Segment style={{ minHeight: 110 }}>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={{ minHeight: 70 }} />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content='View' />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\nexport default observer(function ActivityDashboard() {\r\n  const { activityStore } = useStore();\r\n  const { loadActivities, activityRegistry, setPagingParams, pagination } =\r\n    activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activityRegistry.size <= 1) loadActivities();\r\n  }, [activityRegistry.size, loadActivities]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        {activityStore.loadingInitial && !loadingNext ? (\r\n          <>\r\n            <ActivityListItemPlaceholder/>\r\n            <ActivityListItemPlaceholder/>\r\n          </>\r\n        ):(\r\n          <InfiniteScroll pageStart={0} loadMore={handleGetNext}\r\n        hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages} initialLoad={false}>\r\n          <ActivityList />\r\n        </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext}/>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { Formik, Form, Field, FieldProps } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Segment, Header, Comment, Loader} from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport { formatDistanceToNow } from 'date-fns';\r\n\r\ninterface Props{ \r\n    activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({activityId}: Props) {\r\n\r\n    const {commentStore} = useStore();\r\n\r\n    useEffect(() => {\r\n        if(activityId){\r\n            commentStore.createHubConnection(activityId);\r\n        }\r\n        return () => {\r\n            commentStore.clearComents();\r\n        }\r\n    }, [commentStore, activityId]);\r\n\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                attached='top'\r\n                inverted\r\n                color='teal'\r\n                style={{border: 'none'}}\r\n            >\r\n                <Header>Replies</Header>\r\n            </Segment>\r\n            <Segment attached clearing>\r\n            <Formik onSubmit={(values, {resetForm}) =>\r\n                    commentStore.addComment(values).then(() =>\r\n                    resetForm())} initialValues={{body: ''}} \r\n                    validationSchema={Yup.object({\r\n                        body: Yup.string().required()\r\n                    })}>\r\n                        {({isSubmitting, isValid, handleSubmit}) => (\r\n                            <Form className='ui form'>\r\n                                <Field name='body'>\r\n                                    {(props: FieldProps) => (\r\n                                        <div style={{position: 'relative'}}>\r\n                                            <Loader active={isSubmitting}/>\r\n                                            <textarea placeholder='Enter ypur comment (Enter to submit, ShIFT + Enter for the new line)'\r\n                                            rows={2} {...props.field}\r\n                                            onKeyPress={e => {\r\n                                                if(e.key === 'Enter' && e.shiftKey){\r\n                                                    return;\r\n                                                }\r\n                                                if(e.key === 'Enter' && !e.shiftKey){\r\n                                                    e.preventDefault();\r\n                                                    isValid && handleSubmit();\r\n                                                }\r\n                                            }}/>\r\n                                        </div>\r\n                                    )}\r\n                                </Field>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                <Comment.Group>\r\n                    {commentStore.comments.map(comment => (\r\n                        <Comment key={comment.id}>\r\n                            <Comment.Avatar src={ comment.image || '/assets/user.png'}/>\r\n                            <Comment.Content>\r\n                                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>{comment.displayName}</Comment.Author>\r\n                                <Comment.Metadata>\r\n                                    <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                                </Comment.Metadata>\r\n                                <Comment.Text style={{whiteSpace: 'pre-wrap'}}>{comment.body}</Comment.Text>\r\n                            </Comment.Content>\r\n                        </Comment>\r\n                    ))}\r\n\r\n                    \r\n                </Comment.Group>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(60%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n  const {activityStore: {updatePrezencen, loading, cancelActivityToggle}} = useStore();\r\n  return (\r\n    <Segment.Group style={{ width: \"75%\" }}>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        {activity.isCancelled &&\r\n          <Label style={{position: 'absolute', zIndex: 1000, left: -14, top: 20}}\r\n            ribbon color='red' content='Cancelled'/>\r\n        }\r\n        <Image\r\n          src={`/assets/activities/${activity.kategoria}.png`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment style={activityImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={activity.emri}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p>{format(activity.data!, \"dd MMM yyyy\")}</p>\r\n                <p>\r\n                  Hosted by <strong><Link to={`/pofiles/${activity.host?.username}`}>{activity.host?.displayName}</Link></strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <>\r\n          <Button color={activity.isCancelled ? 'green' : 'red'} floated=\"left\"\r\n            basic content={activity.isCancelled ? 'Re-Activate' : 'Cancel'}\r\n            onClick={cancelActivityToggle} loading={loading}/>\r\n          <Button\r\n            disabled={activity.isCancelled}\r\n            as={Link}\r\n            to={`/manage/${activity.id}`}\r\n            color=\"orange\"\r\n            floated=\"right\"\r\n          >\r\n            Manage Activity\r\n          </Button>\r\n          </>\r\n        ) : activity.isInteresed ? (\r\n          <Button loading={loading} onClick={updatePrezencen}>I am not Interesed</Button>\r\n        ) : (\r\n          <Button disabled={activity.isCancelled} loading={loading}\r\n            onClick={updatePrezencen} color=\"teal\">I am Interesed\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","\r\nimport { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment attached='top'>\r\n                <Grid>\r\n                    <Grid.Column width={1}>\r\n                        <Icon size='large' color='teal' name='info'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <p>{activity.kategoria}</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='calendar' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n            <span>\r\n              {format(activity.data!, 'dd MMM yyyy h:mm aa')}\r\n            </span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='shopping cart' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11}>\r\n                        <span>{activity.pershkrimi}</span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","import React from 'react'\r\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Activity } from '../../../app/models/activity'\r\n\r\ninterface Props{\r\n    activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar ({activity: {activitiesPrezencat, host}}: Props) {\r\n    if(!activitiesPrezencat) return null;\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                style={{ border: 'none' }}\r\n                attached='top'\r\n                secondary\r\n                inverted\r\n                color='teal'\r\n            >\r\n                {activitiesPrezencat.length} {activitiesPrezencat.length === 1 ? 'Person is' : 'Persons are'} interesed for this activity!\r\n            </Segment>\r\n            <Segment attached>\r\n                <List relaxed divided>\r\n                    {activitiesPrezencat.map(activitiesPrezenca =>(\r\n                        <Item style={{ position: 'relative' }} key={activitiesPrezenca.username}>\r\n                            {activitiesPrezenca.username === host?.username &&\r\n                        <Label\r\n                            style={{ position: 'absolute' }}\r\n                            color='orange'\r\n                            ribbon='right'\r\n                        >\r\n                            Host\r\n                        </Label>}\r\n                        <Image size='tiny' src={activitiesPrezenca.image || '/assets/user.png'} />\r\n                        <Item.Content verticalAlign='middle'>\r\n                            <Item.Header as='h3'>\r\n                                <Link to={`/profiles/${activitiesPrezenca.username}`}>{activitiesPrezenca.displayName}</Link>\r\n                            </Item.Header>\r\n                            {activitiesPrezenca.following &&\r\n                            <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>}\r\n                        </Item.Content>\r\n                    </Item>\r\n                    ))}\r\n                </List>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity: activity,\r\n    loadActivity,\r\n    loadingInitial,\r\n    clearSelectedActivity\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n    return () => clearSelectedActivity();\r\n  }, [id, loadActivity, clearSelectedActivity]);\r\n\r\n  if (loadingInitial || !activity)\r\n    return (\r\n      <LoadingComponent content={\"Loading Activity...!\"}/>\r\n    );\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity}/>\r\n        <ActivityDetailedInfo activity={activity}/>\r\n        <ActivityDetailedChat activityId={activity.id}/>\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSidebar activity={activity}/>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(e, d) => helpers.setValue(d.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","export const categoryOptionsActivities = [\r\n    {text:'Prishtine', value: 'Prishtine'},\r\n    {text:'Podujeve', value: 'Podujeve'},\r\n    {text:'Gjilan', value: 'Gjilan'},\r\n    {text:'Prizren', value: 'Prizren'},\r\n    {text:'Mitrovice', value: 'Mitrovice'}\r\n]","import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { Form, Label } from 'semantic-ui-react';\r\nimport DatePicker, {ReactDatePickerProps} from 'react-datepicker';\r\n\r\n\r\nexport default function MyDateInput (props: Partial<ReactDatePickerProps>) {\r\n    const [field, meta, helpers] = useField(props.name!);\r\n    \r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <DatePicker\r\n                {...field}\r\n                {...props}\r\n                selected={(field.value && new Date(field.value)) || null}\r\n                onChange={value => helpers.setValue(value)}\r\n            />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Button, Segment, Header } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\r\nimport { categoryOptionsActivities } from \"../../../app/common/options/CategoryOptions\";\r\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\r\nimport { ActivityFormValues } from \"../../../app/models/activity\";\r\n\r\nexport default observer(function ActivityForm() {\r\n  const history = useHistory();\r\n  const { activityStore } = useStore();\r\n  const { createActivity, updateActivity,\r\n    loadActivity, loadingInitial,} = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n  const validationSchema = Yup.object({\r\n    emri: Yup.string().required('Fusha per Emrin e activityt është e nevojshme!'),\r\n    kategoria: Yup.string().required('Fusha per Kategorine e activityt është e nevojshme!'),\r\n    data: Yup.string().required('Fusha per Datën e activityt është e nevojshme!').nullable(),\r\n    brendi: Yup.string().required(),\r\n    pershkrimi: Yup.string().required()\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id).then(activity => setActivity(new ActivityFormValues(activity)))\r\n  }, [id, loadActivity]);\r\n\r\n  function handleFormSubmit(activity: ActivityFormValues) {\r\n    if (!activity.id) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid(),\r\n      };\r\n      createActivity(newActivity).then(() =>\r\n        history.push(`/activities/${newActivity.id}`)\r\n      );\r\n    } else {\r\n      updateActivity(activity).then(() =>\r\n        history.push(`/activities/${activity.id}`)\r\n      );\r\n    }\r\n  }\r\n\r\n  if (loadingInitial) return <LoadingComponent content=\"Loading Activity...\"/>\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content={\"Activity Form\"} sub color='teal'/>\r\n      <Formik validationSchema={validationSchema} enableReinitialize initialValues={activity} onSubmit={values => handleFormSubmit(values)}>\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form className='ui form' onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <MyTextInput name='emri' placeholder='Name'/>\r\n            <MySelectInput options={categoryOptionsActivities} placeholder=\"Category\" name=\"kategoria\"/>\r\n            <MyTextInput placeholder=\"Brand\" name=\"brendi\"/>\r\n            <MyDateInput  placeholderText=\"Date\" name=\"data\" showTimeSelect timeCaption='time' dateFormat='d MMMM, yyyy h:mm aa'/>\r\n            <MyTextArea rows={3} placeholder=\"Descripiton\" name=\"pershkrimi\"/>\r\n            <Button disabled={isSubmitting || !dirty || !isValid} loading={isSubmitting} floated=\"right\" positive type=\"submit\" content=\"Submit\"/>\r\n            <Button as={Link} to='/activities' floated=\"right\" type=\"button\" content=\"Cancel\"/>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n});\r\n","import React, { useState } from 'react';\r\nimport {Button, Header, Segment} from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport ValidationErrors from './ValidationErrors';\r\n\r\nexport default function TestErrors() {\r\n    const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n    const [errors, setErrors] = useState(null);\r\n\r\n    function handleNotFound() {\r\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err));\r\n    }\r\n\r\n    function handleValidationError() {\r\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header as='h1' content='Test Error component' />\r\n            <Segment>\r\n                <Button.Group widths='7'>\r\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </Button.Group>\r\n            </Segment>\r\n            {errors && \r\n            <ValidationErrors errors={errors}/>}\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react'\r\n\r\nexport default function NotFound (){\r\n    return (\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search'/>\r\n                Oops - nuk gjetem ate qe po kerkoni!\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/activities' primary>\r\n                    Go Back\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Container, Header, Segment } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nexport default observer(function ServerError (){\r\n    const {commonStore} = useStore();\r\n\r\n    return(\r\n        <Container>\r\n            <Header as='h1' content='Server Error'/>\r\n            <Header sub as='h5' color='red' content={commonStore.error?.message}/>\r\n            {commonStore.error?.details &&\r\n            <Segment>\r\n                <Header as='h4' content='Stack trace' color='teal'/>\r\n                <code style={{marginTop: '10px'}}>{commonStore.error.details}</code>\r\n            </Segment>\r\n            }\r\n        </Container>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStore } from '../../stores/store'\r\n\r\nexport default observer (function ModalContainer() {\r\n\r\n    const {modalStore} = useStore();\r\n\r\n    return(\r\n    <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\r\n        <Modal.Content>\r\n            {modalStore.modal.body}\r\n        </Modal.Content>\r\n    </Modal>\r\n    )\r\n})","import React from 'react'\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from 'react-router-dom';\r\nimport { useStore } from '../stores/store'\r\n\r\ninterface Props extends RouteProps{\r\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({component: Component, ...rest}: Props) {\r\n\r\n    const{userStore: {isLoggedIn}} = useStore();\r\n\r\n    return (\r\n        <Route {...rest} render={(props) => isLoggedIn ? <Component {...props}/> : <Redirect to='/'/>}/>\r\n    )\r\n}\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nexport default function useQuery(){\r\n    return new URLSearchParams(useLocation().search);\r\n}","import React from 'react'\r\nimport { toast } from 'react-toastify';\r\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\r\nimport agent from '../../app/api/agent';\r\nimport useQuery from '../../app/common/util/hoooks'\r\n\r\nexport default function RegisterSuccess() {\r\n\r\n    const email = useQuery().get('email') as string;\r\n\r\n    function handleConfirmEmailResend(){\r\n        agent.Account.resendEmailConfirm(email).then(() => {\r\n            toast.success('Verification email resent - please check your email!');\r\n        }).catch(error => console.log(error));\r\n    }\r\n\r\n    return (\r\n        <Segment placeholder textAlign='center'>\r\n            <Header icon color='green'>\r\n                <Icon name='check'/>\r\n                Successfully registered!\r\n            </Header>\r\n            <p>Please check your email (including junk email) for the verification email!</p>\r\n            {email && \r\n                <>\r\n                    <p>Didn't receive the email? Click the below button to Re-Send it again!</p>\r\n                    <Button primary onClick={handleConfirmEmailResend} content='Re-Send email' size='huge'/>\r\n                </>\r\n            }\r\n        </Segment>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { toast } from 'react-toastify';\r\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\r\nimport agent from '../../app/api/agent';\r\nimport useQuery from '../../app/common/util/hoooks';\r\nimport { useStore } from '../../app/stores/store'\r\nimport LoginForm from './LoginForm';\r\n\r\nexport default function ConfirmEmail() {\r\n\r\n    const {modalStore} = useStore();\r\n    const email = useQuery().get('email') as string;\r\n    const token = useQuery().get('token') as string;\r\n\r\n    const Status = {\r\n        Verifying: 'Verifying',\r\n        Failed: 'Failed',\r\n        Success: 'Success'\r\n    }\r\n\r\n    const [status, setStatus] = useState(Status.Verifying);\r\n\r\n    function handleConfirmEmailResend(){\r\n        agent.Account.resendEmailConfirm(email).then(() => {\r\n            toast.success('Verification email resent - please check your email!');\r\n        }).catch(error => console.log(error));\r\n    }\r\n\r\n    useEffect(() => {\r\n        agent.Account.verifyEmail(token, email).then(() => {\r\n            setStatus(Status.Success)\r\n        }).catch(() =>{\r\n            setStatus(Status.Failed)\r\n        })\r\n    },[Status.Failed, Status.Success, token, email])\r\n\r\n    function getBody() {\r\n        switch (status) {\r\n            case Status.Verifying:\r\n                return <p>Verifying...</p>\r\n            case Status.Failed:\r\n                return (\r\n                    <div>\r\n                        <p>Verification failed. You can try resending the verify link to your email!</p>\r\n                        <Button primary onClick={handleConfirmEmailResend} size='huge' content='Resend email'/>\r\n                    </div>\r\n                    );\r\n            case Status.Success:\r\n                return (\r\n                    <div>\r\n                        <p>Email has been verified - you can log in now!</p>\r\n                        <Button primary onClick={() => modalStore.openModal(<LoginForm/>)} size='huge' content='Sign In'/>\r\n                    </div>\r\n                )\r\n        }\r\n    }\r\n    return(\r\n        <Segment placeholder textAlign='center'>\r\n            <Header icon>\r\n                <Icon name='envelope'/>\r\n                Email Verification\r\n            </Header>\r\n            <Segment.Inline>\r\n                {getBody()}\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}\r\n","//Others\r\nimport React, { useEffect } from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport NavBar from \"./NavBar\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Route, Switch, useLocation } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\n//HomePage\r\nimport HomePage from \"../../features/home/HomePage\";\r\n\r\n//Profile\r\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\r\n\r\n//Activities\r\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\r\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\r\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\r\n\r\n//Errors\r\nimport TestErrors from \"../../features/errors/TestError\";\r\nimport NotFound from \"../../features/errors/NotFound\";\r\nimport ServerError from \"../../features/errors/ServerError\";\r\nimport { useStore } from \"../stores/store\";\r\nimport LoadingComponent from \"./LoadingComponent\";\r\nimport ModalContainer from \"../common/modals/ModalContainer\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport RegisterSuccess from \"../../features/users/RegisterSuccess\";\r\nimport ConfirmEmail from \"../../features/users/ConfirmEmail\";\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n  const { commonStore, userStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (commonStore.token) {\r\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\r\n    } else {\r\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\r\n      commonStore.setAppLoaded();\r\n    }\r\n  }, [commonStore, userStore]);\r\n\r\n  if (!commonStore.appLoaded)\r\n    return <LoadingComponent content=\"Loading app...\" />;\r\n\r\n  return (\r\n    <>\r\n      <ModalContainer />\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route\r\n        path={\"/(.+)\"}\r\n        render={() => (\r\n          <>\r\n            <ToastContainer position=\"bottom-right\" hideProgressBar />;\r\n            <NavBar />\r\n            <Container style={{ marginTop: \"7em\" }}>\r\n              <Switch>\r\n                <PrivateRoute exact path=\"/activities\" component={ActivityDashboard}/>\r\n                <PrivateRoute path=\"/activities/:id\" component={ActivityDetails}/>\r\n                <PrivateRoute key={location.key} path={[\"/createActivity\", \"/manage/:id\"]} component={ActivityForm}/>\r\n                <PrivateRoute path=\"/profiles/:username\" component={ProfilePage}/>\r\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\r\n                \r\n                <Route path=\"/account/registerSuccess\" component={RegisterSuccess} />\r\n                <Route path=\"/account/verifyEmail\" component={ConfirmEmail} />\r\n                <Route path=\"/server-error\" component={ServerError} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport 'react-calendar/dist/Calendar.css'\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { Router } from \"react-router-dom\";\nimport {createBrowserHistory} from 'history';\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop/>\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}