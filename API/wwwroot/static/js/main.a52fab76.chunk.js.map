{"version":3,"sources":["app/stores/commonStore.ts","app/models/pagination.ts","app/api/agent.ts","app/models/telefoni.ts","app/models/profile.ts","app/stores/telefoniStore.ts","app/stores/userStore.ts","app/stores/modalStore.ts","app/stores/profileStore.ts","app/stores/commentStore.ts","app/stores/store.ts","app/layout/NavBar.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileTelefonat.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","features/telefonat/dashboard/TelefoniFilters.tsx","features/telefonat/dashboard/TelefoniListItemPrezenca.tsx","features/telefonat/dashboard/TelefoniListItem.tsx","features/telefonat/dashboard/TelefoniList.tsx","features/telefonat/dashboard/TelefoniListItemPlaceholder.tsx","features/telefonat/dashboard/TelefoniDashboard.tsx","features/telefonat/details/TelefoniDetailedChat.tsx","features/telefonat/details/TelefoniDetailedHeader.tsx","features/telefonat/details/TelefoniDetailedInfo.tsx","features/telefonat/details/TelefoniDetailedSidebar.tsx","features/telefonat/details/TelefoniDetails.tsx","app/common/form/MySelectInput.tsx","app/common/options/CategoryOptions.ts","app/common/form/MyDateInput.tsx","features/telefonat/form/TelefoniForm.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["CommonStore","error","token","window","localStorage","getItem","appLoaded","setServerError","setToken","setAppLoaded","makeAutoObservable","this","reaction","setItem","removeItem","PaginatedResult","data","pagination","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","store","commonStore","headers","Authorization","response","a","JSON","parse","status","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","toast","startsWith","userStore","logout","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Telefonat","list","params","details","id","create","telefoni","update","telefoniPrezent","Account","current","login","user","register","fbLogin","accessToken","refreshToken","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listTelefonat","Telefoni","init","Object","assign","TelefoniFormValues","undefined","emri","kategoria","brendi","pershkrimi","cmimi","Profile","displayName","image","TelefoniStore","telefoniRegistry","Map","selectedTelefoni","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadTelefonat","axiosParams","result","setTelefoni","setPagination","setLoadingInitial","console","log","loadTelefoni","getTelefoni","runInAction","isInteresed","telefonatPrezencat","some","isHost","hostUsername","host","find","x","Date","state","createTelefoni","newTelefoni","updateTelefoni","updatedTelefoni","deleteTelefoni","updatePrezencen","filter","cancelTelefoniToggle","isCancelled","clearSelectedTelefoni","updatePrezencaFollowing","telefoniPrezenca","following","followersCount","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","telefonatByDate","reduce","telefonat","format","UserStore","fbAccessToken","fbLoading","refreshTokenTimeout","creds","startRefreshTokenTimer","modalStore","closeModal","getUser","setImage","setDisplayName","name","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","stopRefreshTokenTimer","jwtToken","atob","split","timeout","exp","now","setTimeout","clearTimeout","ModalStore","modal","open","openModal","content","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userTelefonat","loadingTelefonat","setActiveTab","loadProfile","photo","photos","isMain","p","telefoniStore","followingCount","loadFollowings","loadUserTelefonat","CommentStore","comments","hubConnection","createHubConnection","telefoniId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComents","addComment","invoke","profileStore","commentStore","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","backgroundColor","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","MyTextInput","props","useField","field","meta","Form","Field","touched","label","Label","basic","color","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","Header","textAlign","placeholder","type","render","marginBottom","positive","fluid","ValidationErrors","Message","List","map","err","i","validationSchema","Yup","required","isValid","dirty","disabled","Segment","vertical","size","isLoggedIn","Divider","horizontal","LoadingComponent","Dimmer","active","Loader","MyTextArea","setEditMode","bio","rows","floated","isCurrentUser","useState","Tab","Pane","Grid","Column","width","whiteSpace","Reveal","animated","Content","visible","hidden","e","preventDefault","handleFollow","Card","Description","str","length","substring","truncate","extra","Icon","Group","itemsPerRow","PhotoWidgetCropper","imagePreview","setCropper","height","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","border","borderColor","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","useEffect","revokeObjectURL","sub","minHeight","overflow","widths","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","panes","menuItem","pane","menu","secondary","onTabChange","activeIndex","handleTabChange","objectFit","Meta","menuPosition","verticalAlign","Statistic","useParams","marginTop","attached","has","onChange","styles","borderWidth","telefonatPrezenca","Popup","hoverable","trigger","circular","bordered","TelefoniListItem","clearing","groupedTelefonat","group","TelefoniListItemPlaceholder","Placeholder","Line","Paragraph","loadingNext","setLoadingNext","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","telefoniImageStyle","telefoniImageTextStyle","bottom","left","padding","zIndex","top","ribbon","relaxed","divided","Extra","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptionsTelefonat","MyDateInput","selected","useHistory","nullable","enableReinitialize","uuid","handleFormSubmit","placeholderText","showTimeSelect","timeCaption","dateFormat","TestErrors","baseUrl","primary","NotFound","Inline","message","Modal","onClose","PrivateRoute","Component","component","rest","location","useLocation","finally","path","HomePage","hideProgressBar","TelefoniDashboard","TelefoniDetails","TelefoniForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.a52fab76.chunk.js","sourcesContent":["import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore{\r\n    error: ServerError | null = null;\r\n    token: string | null = window.localStorage.getItem('jwt');\r\n    appLoaded = false;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.token,\r\n            token =>{\r\n                if(token){\r\n                    window.localStorage.setItem('jwt', token)\r\n                } else {\r\n                    window.localStorage.removeItem('jwt')\r\n                }\r\n            }\r\n        )\r\n}\r\n\r\n    setServerError = (error: ServerError) => {\r\n        this.error = error;\r\n    }\r\n\r\n    setToken = (token: string | null) => {\r\n        this.token = token;\r\n    }\r\n\r\n    setAppLoaded = () =>{\r\n        this.appLoaded = true;\r\n    }\r\n}","export interface Pagination{\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T>{\r\n    data: T;\r\n    pagination: Pagination;\r\n\r\n    constructor(data: T, pagination: Pagination){\r\n        this.data = data;\r\n        this.pagination = pagination;\r\n    }\r\n}\r\n\r\nexport class PagingParams{\r\n    pageNumber;\r\n    pageSize;\r\n\r\n    constructor(pageNumber = 1, pageSize = 2){\r\n        this.pageNumber = pageNumber;\r\n        this.pageSize = pageSize;\r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { Telefoni, TelefoniFormValues } from \"../models/telefoni\";\r\nimport { store } from \"../stores/store\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { Photo, Profile, UserTelefoni } from \"../models/profile\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay)\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.commonStore.token;\r\n    if (token) config.headers.Authorization = `Bearer ${token}`\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if (process.env.NODE_ENV === 'development') await sleep(1000);\r\n    const pagination = response.headers['pagination'];\r\n    if (pagination) {\r\n        response.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n        return response as AxiosResponse<PaginatedResult<any>>\r\n    }\r\n    return response;\r\n}, (error: AxiosError) => {\r\n    const { data, status, config, headers } = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n                history.push('/not-found');\r\n            }\r\n            if (data.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modalStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modalStateErrors.flat();\r\n            } else {\r\n                toast.error(data);\r\n            }\r\n            break;\r\n        case 401:\r\n            if (status === 401 && headers['www-authenticate']?.startsWith('Bearer error=\"invalid_token\"')) {\r\n                store.userStore.logout();\r\n                toast.error('Session expired - please login again');\r\n            }\r\n            break;\r\n        case 404:\r\n            history.push('/not-found');\r\n            break;\r\n        case 500:\r\n            store.commonStore.setServerError(data);\r\n            history.push('/server-error');\r\n            break;\r\n    }\r\n    return Promise.reject(error);\r\n})\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Telefonat = {\r\n    list: (params: URLSearchParams) => axios.get<PaginatedResult<Telefoni[]>>('/telefonat', {params}).then(responseBody),\r\n    details: (id: string) => requests.get<Telefoni>(`/telefonat/${id}`),\r\n    create: (telefoni: TelefoniFormValues) => requests.post<void>('/telefonat', telefoni),\r\n    update: (telefoni: TelefoniFormValues) => requests.put<void>(`/telefonat/${telefoni.id}`, telefoni),\r\n    delete: (id: string) => requests.del<void>(`/telefonat/${id}`),\r\n    telefoniPrezent: (id: string) => requests.post<void>(`/telefonat/${id}/attend`,{})\r\n}\r\n\r\nconst Account = {\r\n    current: () => requests.get<User>('/account'),\r\n    login: (user: UserFormValues) => requests.post<User>('/account/login', user),\r\n    register: (user: UserFormValues) => requests.post<User>('/account/register', user),\r\n    fbLogin: (accessToken: string) => requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}),\r\n    refreshToken: () => requests.post<User>('/account/refreshToken', {})\r\n}\r\n\r\nconst Profiles = {\r\n    get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n    uploadPhoto: (file: Blob) =>{\r\n        let formData = new FormData();\r\n        formData.append('File', file);\r\n        return axios.post<Photo>('photos', formData, {\r\n            headers: {'Content-type': 'multipart/form-data'}\r\n        })\r\n    },\r\n    setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`,{}),\r\n    deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n    updateProfile: (profile: Partial<Profile>) => requests.put(`/profiles`, profile),\r\n    updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\r\n    listFollowings: (username: string, predicate: string) => requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n    listTelefonat: (username: string, predicate: string) => requests.get<UserTelefoni[]>(`/profiles/${username}/telefonat?predicate=${predicate}`)\r\n}\r\n\r\nconst agent = {\r\n    Telefonat, Account, Profiles\r\n}\r\n\r\nexport default agent;","import { Profile } from \"./profile\";\r\n\r\nexport interface Telefoni {\r\n    id: string;\r\n    emri: string;\r\n    kategoria: string;\r\n    brendi: string;\r\n    data: Date | null;\r\n    pershkrimi: string;\r\n    cmimi: number | null;\r\n    hostUsername: string;\r\n    isCancelled: boolean;\r\n    isInteresed: boolean;\r\n    isHost: boolean;\r\n    host?: Profile;\r\n    telefonatPrezencat: Profile[]\r\n}\r\n\r\nexport class Telefoni implements Telefoni{\r\n    constructor(init?: TelefoniFormValues){\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport class TelefoniFormValues{\r\n    id?: string = undefined;\r\n    emri: string = '';\r\n    kategoria: string = '';\r\n    brendi: string = '';\r\n    data: Date | null = null;\r\n    pershkrimi: string = '';\r\n    cmimi: number | null = null;\r\n\r\n    constructor(telefoni?: TelefoniFormValues){\r\n        if(telefoni){\r\n            this.id = telefoni.id;\r\n            this.emri = telefoni.emri;\r\n            this.kategoria = telefoni.kategoria;\r\n            this.brendi = telefoni.brendi;\r\n            this.data = telefoni.data;\r\n            this.pershkrimi = telefoni.pershkrimi;\r\n            this.cmimi = telefoni.cmimi;\r\n        }\r\n    }\r\n}","import { User } from \"./user\";\r\n\r\nexport interface Profile{\r\n    username: string;\r\n    displayName: string;\r\n    image?: string;\r\n    bio?: string;\r\n    followersCount: number;\r\n    followingCount: number;\r\n    following: boolean;\r\n    photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile{\r\n    constructor(user: User){\r\n        this.username = user.username;\r\n        this.displayName = user.displayName;\r\n        this.image = user.image;\r\n    }\r\n}\r\nexport interface Photo{\r\n    id: string;\r\n    url: string;\r\n    isMain: boolean;\r\n}\r\n\r\nexport interface UserTelefoni {\r\n    id: string;\r\n    emri: string;\r\n    kategoria: string;\r\n    data: Date;\r\n    }","import { format } from \"date-fns\";\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\"\r\nimport agent from \"../api/agent\";\r\nimport { Telefoni, TelefoniFormValues } from \"../models/telefoni\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\n\r\nexport default class TelefoniStore {\r\n    telefoniRegistry = new Map<string, Telefoni>();\r\n    selectedTelefoni: Telefoni | undefined = undefined;\r\n    editMode = false;\r\n    loading = false;\r\n    loadingInitial = false;\r\n    pagination: Pagination | null = null;\r\n    pagingParams = new PagingParams();\r\n    predicate = new Map().set('all', true);\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n\r\n        reaction(() => this.predicate.keys(),\r\n        () => {\r\n            this.pagingParams = new PagingParams();\r\n            this.telefoniRegistry.clear();\r\n            this.loadTelefonat();\r\n        }\r\n    )\r\n    }\r\n\r\n    setPagingParams = (pagingParams: PagingParams) =>{\r\n        this.pagingParams = pagingParams;\r\n    }\r\n\r\n    setPredicate = (predicate: string, value: string | Date) =>{\r\n        const resetPredicate = () =>{\r\n            this.predicate.forEach((value, key) => {\r\n                if(key !== 'startDate') this.predicate.delete(key);\r\n            })\r\n        }\r\n        switch (predicate) {\r\n            case 'all':\r\n                resetPredicate();\r\n                this.predicate.set('all', true);\r\n                break;\r\n            case 'isInteresed':\r\n                resetPredicate();\r\n                this.predicate.set('isInteresed', true);\r\n                break;\r\n            case 'isHost':\r\n                resetPredicate();\r\n                this.predicate.set('isHost', true);\r\n                break;\r\n            case 'startDate':\r\n                this.predicate.delete('startDate');\r\n                this.predicate.set('startDate', value);\r\n        }\r\n    }\r\n\r\n    get axiosParams(){\r\n        const params = new URLSearchParams();\r\n        params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n        params.append('pageSize', this.pagingParams.pageSize.toString());\r\n        this.predicate.forEach((value, key) => {\r\n            if(key === 'startDate'){\r\n                params.append(key, (value as Date).toISOString())\r\n            } else {\r\n                params.append(key, value);\r\n            }\r\n        })\r\n        return params;\r\n    }\r\n\r\n    get telefonatByDate() {\r\n        return Array.from(this.telefoniRegistry.values()).sort((a, b) => a.data!.getTime() - b.data!.getTime());\r\n    }\r\n\r\n    get groupedTelefonat(){\r\n        return Object.entries(\r\n            this.telefonatByDate.reduce((telefonat, telefoni) =>{\r\n                const data = format(telefoni.data!, 'dd MMM yyy');\r\n                telefonat[data] = telefonat[data] ? [...telefonat[data], telefoni] : [telefoni]\r\n                return telefonat;\r\n            }, {} as {[key: string]: Telefoni[]})\r\n        )\r\n    }\r\n\r\n    loadTelefonat = async () => {\r\n        this.loadingInitial = true;\r\n        try {\r\n            const result = await agent.Telefonat.list(this.axiosParams);\r\n            result.data.forEach((telefoni) => {\r\n                this.setTelefoni(telefoni);\r\n            })\r\n            this.setPagination(result.pagination);\r\n            this.setLoadingInitial(false);\r\n        } catch (error) {\r\n            console.log(error)\r\n            this.setLoadingInitial(false);\r\n        }\r\n    }\r\n\r\n    setPagination = (pagination: Pagination) => {\r\n        this.pagination = pagination;\r\n    }\r\n\r\n    loadTelefoni = async (id: string) => {\r\n        let telefoni = this.getTelefoni(id);\r\n        if (telefoni) {\r\n            this.selectedTelefoni = telefoni;\r\n            return telefoni;\r\n        } else {\r\n            this.loadingInitial = true;\r\n            try {\r\n                telefoni = await agent.Telefonat.details(id);\r\n                this.setTelefoni(telefoni);\r\n                runInAction(() => {\r\n                    this.selectedTelefoni = telefoni;\r\n                })\r\n                this.setLoadingInitial(false);\r\n                return telefoni;\r\n            } catch (error) {\r\n                console.log(error);\r\n                this.setLoadingInitial(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setTelefoni = (telefoni: Telefoni) => {\r\n        const user = store.userStore.user;\r\n        if (user){\r\n            telefoni.isInteresed = telefoni.telefonatPrezencat!.some(\r\n                a => a.username === user.username\r\n            )\r\n            telefoni.isHost = telefoni.hostUsername === user.username;\r\n            telefoni.host = telefoni.telefonatPrezencat?.find(x => x.username === telefoni.hostUsername)\r\n        }\r\n        telefoni.data = new Date(telefoni.data!);\r\n        this.telefoniRegistry.set(telefoni.id, telefoni);\r\n    }\r\n\r\n    private getTelefoni = (id: string) => {\r\n        return this.telefoniRegistry.get(id);\r\n    }\r\n\r\n    setLoadingInitial = (state: boolean) => {\r\n        this.loadingInitial = state;\r\n    }\r\n\r\n    createTelefoni = async (telefoni: TelefoniFormValues) => {\r\n        const user = store.userStore.user;\r\n        const telefoniPrezent = new Profile(user!);\r\n        try {\r\n            await agent.Telefonat.create(telefoni);\r\n            const newTelefoni = new Telefoni(telefoni);\r\n            newTelefoni.hostUsername = user!.username;\r\n            newTelefoni.telefonatPrezencat = [telefoniPrezent];\r\n            this.setTelefoni(newTelefoni);\r\n            runInAction(() => {\r\n                this.selectedTelefoni = newTelefoni;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    updateTelefoni = async (telefoni: TelefoniFormValues) => {\r\n        try {\r\n            await agent.Telefonat.update(telefoni);\r\n            runInAction(() => {\r\n                if(telefoni.id){\r\n                    let updatedTelefoni = {...this.getTelefoni(telefoni.id), ...telefoni}\r\n                    this.telefoniRegistry.set(telefoni.id, updatedTelefoni as Telefoni);\r\n                    this.selectedTelefoni = updatedTelefoni as Telefoni;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    deleteTelefoni = async (id: string) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Telefonat.delete(id);\r\n            runInAction(() => {\r\n                this.telefoniRegistry.delete(id);\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loading = false;\r\n            })\r\n        }\r\n    }\r\n\r\n    updatePrezencen = async () => {\r\n        const user = store.userStore.user;\r\n        this.loading = true;\r\n        try {\r\n            await agent.Telefonat.telefoniPrezent(this.selectedTelefoni!.id);\r\n            runInAction(() => {\r\n                if(this.selectedTelefoni?.isInteresed){\r\n                    this.selectedTelefoni.telefonatPrezencat = this.selectedTelefoni.telefonatPrezencat?.filter(a => a.username !== user?.username);\r\n                    this.selectedTelefoni.isInteresed = false;\r\n                } else {\r\n                    const telefoniPrezent = new Profile(user!);\r\n                    this.selectedTelefoni?.telefonatPrezencat?.push(telefoniPrezent);\r\n                    this.selectedTelefoni!.isInteresed = true;\r\n                }\r\n                this.telefoniRegistry.set(this.selectedTelefoni!.id, this.selectedTelefoni!)\r\n            })\r\n        } catch (error) {\r\n            console.log(error)            \r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    cancelTelefoniToggle = async () => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Telefonat.telefoniPrezent(this.selectedTelefoni!.id);\r\n            runInAction(() => {\r\n                this.selectedTelefoni!.isCancelled = !this.selectedTelefoni?.isCancelled;\r\n                this.telefoniRegistry.set(this.selectedTelefoni!.id, this.selectedTelefoni!)\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    clearSelectedTelefoni = () => {\r\n        this.selectedTelefoni = undefined;\r\n    }\r\n\r\n    updatePrezencaFollowing = (username: string) => {\r\n        this.telefoniRegistry.forEach(telefoni => {\r\n            telefoni.telefonatPrezencat.forEach(telefoniPrezenca =>{\r\n                if(telefoniPrezenca.username === username){\r\n                    telefoniPrezenca.following ? telefoniPrezenca.followersCount-- : telefoniPrezenca.followersCount++;\r\n                    telefoniPrezenca.following = !telefoniPrezenca.following;\r\n                }\r\n            })\r\n        })\r\n    }\r\n}","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore{\r\n    user: User | null = null;\r\n    fbAccessToken: string | null = null;\r\n    fbLoading = false;\r\n    refreshTokenTimeout: any;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    get isLoggedIn(){\r\n        return !!this.user;\r\n    }\r\n\r\n    login = async ( creds: UserFormValues) => {\r\n        try{\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            this.startRefreshTokenTimer(user);\r\n            runInAction(() => this.user = user);\r\n            history.push('/telefonat');\r\n            store.modalStore.closeModal();\r\n        } catch (error){\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push('/');\r\n    }\r\n\r\n    getUser = async () => {\r\n        try {\r\n            const user = await agent.Account.current();\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            this.startRefreshTokenTimer(user);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    register = async (creds: UserFormValues) => {\r\n        try{\r\n            const user = await agent.Account.register(creds);\r\n            store.commonStore.setToken(user.token);\r\n            this.startRefreshTokenTimer(user);\r\n            runInAction(() => this.user = user);\r\n            history.push('/telefonat');\r\n            store.modalStore.closeModal();\r\n        } catch (error){\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    setImage = (image: string) => {\r\n        if(this.user) this.user.image = image;\r\n    }\r\n\r\n    setDisplayName = (name: string) => {\r\n        if (this.user) this.user.displayName = name;\r\n    }\r\n\r\n    getFacebookLoginStatus = async () => {\r\n        window.FB.getLoginStatus(response => {\r\n            if(response.status === 'connected'){\r\n                this.fbAccessToken = response.authResponse.accessToken;\r\n            }\r\n        })\r\n    }\r\n\r\n    facebookLogin = () =>{\r\n        this.fbLoading = true;\r\n        const apiLogin = (accessToken: string) => {\r\n            agent.Account.fbLogin(accessToken).then(user => {\r\n                store.commonStore.setToken(user.token);\r\n                this.startRefreshTokenTimer(user);\r\n                runInAction(() => {\r\n                    this.user = user;\r\n                    this.fbLoading = false;\r\n                })\r\n                history.push('/telefonat')\r\n            }).catch(error => {\r\n                console.log(error);\r\n                runInAction(() => this.fbLoading = false);\r\n            })\r\n        }\r\n\r\n        if(this.fbAccessToken){\r\n            apiLogin(this.fbAccessToken);\r\n        }else{\r\n            window.FB.login(response =>{\r\n                apiLogin(response.authResponse.accessToken);\r\n            }, {scope: 'public_profile,email'})\r\n        }\r\n    }\r\n\r\n    refreshToken = async () => {\r\n        this.stopRefreshTokenTimer();\r\n        try {\r\n            const user = await agent.Account.refreshToken();\r\n            runInAction(() => this.user = user);\r\n            store.commonStore.setToken(user.token);\r\n            this.startRefreshTokenTimer(user);\r\n        } catch (error) {\r\n            console.log(error);   \r\n        }\r\n    }\r\n\r\n    private startRefreshTokenTimer(user: User){\r\n        const jwtToken = JSON.parse(atob(user.token.split('.')[1]));\r\n        const expires = new Date(jwtToken.exp * 1000);\r\n        const timeout = expires.getTime() - Date.now() - (30 * 1000);\r\n        this.refreshTokenTimeout = setTimeout(this.refreshToken, timeout);\r\n    }\r\n\r\n    private stopRefreshTokenTimer(){\r\n        clearTimeout(this.refreshTokenTimeout);\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal{\r\n    open: boolean;\r\n    body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore{\r\n    modal: Modal = {\r\n        open: false,\r\n        body: null\r\n    }\r\n\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    openModal = (content: JSX.Element) => {\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n    \r\n    closeModal = () => {\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserTelefoni } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n    profile: Profile | null = null;\r\n    loadingProfile = false;\r\n    uploading = false;\r\n    loading = false;\r\n    followings: Profile[] = [];\r\n    loadingFollowings: boolean = false;\r\n    activeTab = 0;\r\n    userTelefonat: UserTelefoni[] = [];\r\n    loadingTelefonat = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(() => this.activeTab,\r\n            activeTab => {\r\n                if(activeTab === 3 || activeTab === 4){\r\n                    const predicate = activeTab ===3 ? 'followers' : 'following';\r\n                    this.loadFollowings(predicate);\r\n                }else{\r\n                    this.followings = [];\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setActiveTab = (activeTab: any) =>{\r\n        this.activeTab = activeTab;\r\n    }\r\n\r\n    get isCurrentUser() {\r\n        if (store.userStore.user && this.profile) {\r\n            return store.userStore.user.username === this.profile.username;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    loadProfile = async (username: string) => {\r\n        this.loadingProfile = true;\r\n        try {\r\n            const profile = await agent.Profiles.get(username);\r\n            runInAction(() => {\r\n                this.profile = profile;\r\n                this.loadingProfile = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loadingProfile = false);\r\n        }\r\n    }\r\n\r\n    uploadPhoto = async (file: Blob) => {\r\n        this.uploading = true;\r\n        try {\r\n            const response = await agent.Profiles.uploadPhoto(file);\r\n            const photo = response.data;\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos?.push(photo);\r\n                    if (photo.isMain && store.userStore.user) {\r\n                        store.userStore.setImage(photo.url);\r\n                        this.profile.image = photo.url;\r\n                    }\r\n                }\r\n                this.uploading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(() => this.uploading = false);\r\n        }\r\n    }\r\n\r\n    setMainPhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.setMainPhoto(photo.id);\r\n            store.userStore.setImage(photo.url);\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.photos) {\r\n                    this.profile.photos.find(p => p.isMain)!.isMain = false;\r\n                    this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\r\n                    this.profile.image = photo.url;\r\n                    this.loading = false;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => this.loading = false);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    deletePhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.deletePhoto(photo.id);\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\r\n                    this.loading = false;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => { this.loading = false });\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    updateProfile = async (profile: Partial<Profile>) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.updateProfile(profile);\r\n            runInAction(() => {\r\n                if (profile.displayName && profile.displayName !==\r\n                    store.userStore.user?.displayName) {\r\n                    store.userStore.setDisplayName(profile.displayName);\r\n                }\r\n                this.profile = { ...this.profile, ...profile as Profile };\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    updateFollowing = async (username: string, following: boolean) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.updateFollowing(username);\r\n            store.telefoniStore.updatePrezencaFollowing(username);\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username === username) {\r\n                    following ? this.profile.followersCount++ : this.profile.followersCount--;\r\n                    this.profile.following = !this.profile.following;\r\n                }\r\n\r\n                if(this.profile && this.profile.username === store.userStore.user?.username){\r\n                    following ? this.profile.followingCount++ : this.profile.followingCount--;\r\n                }\r\n                this.followings.forEach(profile => {\r\n                    if (profile.username === username) {\r\n                        profile.following ? profile.followersCount-- : profile.followersCount++;\r\n                        profile.following = !profile.following;\r\n                    }\r\n                })\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loading = false);\r\n\r\n        }\r\n    }\r\n\r\n    loadFollowings = async (predicate: string) => {\r\n        this.loadingFollowings = true;\r\n        try {\r\n            const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\r\n            runInAction(() => {\r\n                this.followings = followings;\r\n                this.loadingFollowings = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loadingFollowings = false);\r\n        }\r\n    }\r\n\r\n    loadUserTelefonat = async (username: string, predicate?: string) => {\r\n        this.loadingTelefonat = true;\r\n        try {\r\n        const telefonat = await agent.Profiles.listTelefonat(username,\r\n        predicate!);\r\n        runInAction(() => {\r\n        this.userTelefonat = telefonat;\r\n        this.loadingTelefonat = false;\r\n        })\r\n        } catch (error) {\r\n        console.log(error);\r\n        runInAction(() => {\r\n        this.loadingTelefonat = false;\r\n        })\r\n        }\r\n        }\r\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore{\r\n    comments: ChatComment[] = [];\r\n    hubConnection: HubConnection | null = null;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    createHubConnection = (telefoniId: string) => {\r\n        if(store.telefoniStore.selectedTelefoni){\r\n            this.hubConnection = new HubConnectionBuilder().withUrl(process.env.REACT_APP_CHAT_URL + '?telefoniId=' + telefoniId,{\r\n                accessTokenFactory: () => store.userStore.user?.token!\r\n            })\r\n            .withAutomaticReconnect()\r\n            .configureLogging(LogLevel.Information)\r\n            .build();\r\n\r\n            this.hubConnection.start().catch(error => console.log('Error establishing the connection: ', error));\r\n\r\n            this.hubConnection.on('LoadComments', (comments: ChatComment[]) =>{\r\n                runInAction(() => {\r\n                    comments.forEach(comment => {\r\n                        comment.createdAt = new Date(comment.createdAt + 'Z');\r\n                    })\r\n                    this.comments = comments\r\n                });\r\n            })\r\n\r\n            this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\r\n                runInAction(() => {\r\n                    comment.createdAt = new Date(comment.createdAt);\r\n                    this.comments.unshift(comment)\r\n                });\r\n            })\r\n        }\r\n    }\r\n    stopHubConnection = () => {\r\n        this.hubConnection?.stop().catch(error => console.log('Error stopping connection', error));\r\n    }\r\n\r\n    clearComents = () => {\r\n        this.comments = [];\r\n    this.stopHubConnection();\r\n    }\r\n\r\n    addComment = async (values: any) => {\r\n        values.telefoniId = store.telefoniStore.selectedTelefoni?.id;\r\n        try {\r\n            await this.hubConnection?.invoke('SendComment', values);\r\n        } catch (error) {\r\n            console.log(error);\r\n            }\r\n    }\r\n}","import { createContext, useContext } from \"react\";\r\nimport CommonStore from \"./commonStore\";\r\nimport TelefoniStore from \"./telefoniStore\";\r\nimport UserStore from \"./userStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport CommentStore from \"./commentStore\";\r\n\r\ninterface Store{\r\n    telefoniStore: TelefoniStore;\r\n    commonStore: CommonStore;\r\n    userStore: UserStore;\r\n    modalStore: ModalStore;\r\n    profileStore: ProfileStore;\r\n    commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n    telefoniStore: new TelefoniStore(),\r\n    commonStore: new CommonStore(),\r\n    userStore: new UserStore(),\r\n    modalStore: new ModalStore(),\r\n    profileStore: new ProfileStore(),\r\n    commentStore: new CommentStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore(){\r\n    return useContext(StoreContext);\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Dropdown, Menu, Image} from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default observer (function NavBar() {\r\n  const {userStore: {user, logout}} = useStore();\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item as={NavLink} to=\"/\" exact header>\r\n          <img src=\"/assets/logo.png\" alt=\"logo\" style={{ marginRight: \"10px\" }}/>\r\n          Tech E-Commerce\r\n        </Menu.Item>\r\n      </Container>\r\n\r\n      <Menu.Item as={NavLink} to=\"/telefonat\" name=\"Telefonat\"/>\r\n      <Button as={NavLink} to=\"/createTelefoni\" style={{backgroundColor: \"#AEB6BF\"}} content=\"Krijo Telefonin\"/>\r\n      <Menu.Item position='right'>\r\n        <Image src={user?.image || '/assets/user.png'} avatar spaced='right'/>\r\n        <Dropdown pointing='top right' text={user?.displayName}>\r\n          <Dropdown.Menu>\r\n          <Dropdown.Item as={Link} to={`/profiles/${user?.username}`} text='Profile' icon='user'/>\r\n          <Dropdown.Item onClick={logout} text='Logout' icon='power'/>\r\n          </Dropdown.Menu> \r\n        </Dropdown>\r\n      </Menu.Item>\r\n      {/* <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" /> */}\r\n    </Menu>\r\n  );\r\n})","import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props{\r\n    placeholder: string;\r\n    name: string;\r\n    type?: string;\r\n    label?: string;\r\n}\r\n\r\nexport default function MyTextInput (props: Props) {\r\n    const [field, meta] = useField(props.name);\r\n    \r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <input {...field} {...props}/>\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) :null}\r\n        </Form.Field>\r\n    )\r\n}\r\n","import { ErrorMessage, Form, Formik } from 'formik'\r\nimport { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Button, Header, Label } from 'semantic-ui-react'\r\nimport MyTextInput from '../../app/common/form/MyTextInput'\r\nimport { useStore } from '../../app/stores/store'\r\n\r\nexport default observer (function LoginForm () {\r\n    const {userStore} = useStore();\r\n    return (\r\n        <Formik initialValues={{email: '', password: '', error: null}} onSubmit={(values, {setErrors}) => \r\n        userStore.login(values).catch(error=> setErrors({error: 'E-mail ose Fjalëkalimi janë gabim!'}))}>\r\n            {({handleSubmit, isSubmitting, errors}) =>(\r\n                <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Identifikohu ne Tech E-Commerce' color='teal' textAlign='center'/>\r\n                    <MyTextInput name='email' placeholder='Email'/>\r\n                    <MyTextInput name='password' placeholder='Password' type='password'/>\r\n                    <ErrorMessage name='error' render={() => <Label style={{marginBottom: 10}} basic color='red' content={errors.error}/>}/>\r\n                    <Button loading={isSubmitting} positive content='Login' type='submit' fluid/>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})\r\n","import React from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    errors: any;\r\n}\r\n\r\nexport default function ValidationErrors ({errors}: Props){\r\n    return (\r\n        <Message error>\r\n            {errors && (\r\n                <Message.List>\r\n                    {errors.map((err: any, i: any) =>(\r\n                        <Message.Item key={i}>{err}</Message.Item>\r\n                    ))}\r\n                </Message.List>\r\n            )}\r\n        </Message>\r\n    )\r\n}\r\n","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport ValidationErrors from '../errors/ValidationErrors';\r\n\r\nexport default observer (function RegisterForm () {\r\n    const {userStore} = useStore();\r\n    return (\r\n        <Formik initialValues={{displayName:'', username: '',  email: '', password: '', error: null}} onSubmit={(values, {setErrors}) => \r\n        userStore.register(values).catch(error=> setErrors({error}))}\r\n        validationSchema={Yup.object({\r\n            displayName: Yup.string().required(),\r\n            username: Yup.string().required(),\r\n            email: Yup.string().required().email(),\r\n            password: Yup.string().required(),\r\n        })}>\r\n            {({handleSubmit, isSubmitting, errors, isValid, dirty}) =>(\r\n                <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Regjistrohu ne Tech E-Commerce' color='teal' textAlign='center'/>\r\n                    <MyTextInput name='displayName' placeholder='Display Name'/>\r\n                    <MyTextInput name='username' placeholder='Username'/>\r\n                    <MyTextInput name='email' placeholder='Email'/>\r\n                    <MyTextInput name='password' placeholder='Password' type='password'/>\r\n                    <ErrorMessage name='error' render={() => <ValidationErrors errors={errors.error}/>}/>\r\n                    <Button disabled={!isValid || !dirty || isSubmitting} loading={isSubmitting} positive content='Register' type='submit' fluid/>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Header, Segment, Image, Button, Divider} from 'semantic-ui-react'\r\nimport { useStore } from '../../app/stores/store';\r\nimport LoginForm from '../users/LoginForm';\r\nimport RegisterForm from '../users/RegisterForm';\r\n\r\n\r\nexport default observer(function HomePage () {\r\n    const {userStore, modalStore} = useStore();\r\n    return (\r\n       <Segment inverted textAlign='center' vertical className=\"masthead\">\r\n           <Container text>\r\n               <Header as='h1' inverted>\r\n                   <Image size=\"massive\" src='/assets/logo.png' alt=\"logo\" style={{marginBottom: 12}}/>\r\n                   Tech E-Commerce\r\n               </Header>\r\n               {userStore.isLoggedIn ? (\r\n                   <>\r\n                   <Header as='h2' inverted content='Miresevini ne Tech E-Commerce!'/>\r\n                   <Button as={Link} to=\"/telefonat\" size='huge' inverted>Shko tek produktet!</Button>\r\n                   </>\r\n               ): (\r\n                   <>\r\n                   <Button onClick={() => modalStore.openModal(<LoginForm/>)} size='huge' inverted>Sign In</Button>\r\n                   <Button onClick={() => modalStore.openModal(<RegisterForm/>)} size='huge' inverted>Sign Up</Button>\r\n                   <Divider horizontal inverted>\r\n                       Or\r\n                   </Divider>\r\n                   <Button loading={userStore.fbLoading} size='huge' inverted color='facebook' content=\"Log In with Facebook\" onClick={userStore.facebookLogin}/>\r\n                   </>\r\n               )}\r\n           </Container>\r\n       </Segment>\r\n    )\r\n})\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  inverted?: boolean;\r\n  content: string;\r\n}\r\n\r\nexport default function LoadingComponent({\r\n  inverted = true,\r\n  content = \"Loading...\",\r\n}: Props) {\r\n  return (\r\n    <Dimmer active={true} inverted={inverted}>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n}\r\n","import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props{\r\n    placeholder: string;\r\n    name: string;\r\n    rows: number;\r\n    label?: string;\r\n}\r\n\r\nexport default function MyTextArea (props: Props) {\r\n    const [field, meta] = useField(props.name);\r\n    \r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <textarea {...field} {...props}/>\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}\r\n","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { profile, updateProfile },\r\n  } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n      onSubmit={(values) => {\r\n        updateProfile(values).then(() => {\r\n          setEditMode(false);\r\n        });\r\n      }}\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ isSubmitting, isValid, dirty }) => (\r\n        <Form className=\"ui form\">\r\n          <MyTextInput placeholder=\"Display Name\" name=\"displayName\" />\r\n          <MyTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\r\n          <Button\r\n            positive\r\n            type=\"submit\"\r\n            loading={isSubmitting}\r\n            content=\"Update profile\"\r\n            floated=\"right\"\r\n            disabled={!isValid || !dirty}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\nimport { observer } from \"mobx-react-lite\";\r\nexport default observer(function ProfileAbout() {\r\n  const { profileStore } = useStore();\r\n  const { isCurrentUser, profile } = profileStore;\r\n  const [editMode, setEditMode] = useState(false);\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width=\"16\">\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={`About ${profile?.displayName}`}\r\n          />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={editMode ? \"Cancel\" : \"Edit Profile\"}\r\n              onClick={() => setEditMode(!editMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width=\"16\">\r\n          {editMode ? (\r\n            <ProfileEditForm setEditMode={setEditMode} />\r\n          ) : (\r\n            <span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n\r\n    const {profileStore, userStore} = useStore();\r\n    const {updateFollowing, loading} = profileStore;\r\n\r\n    if(userStore.user?.username === profile.username) return null;\r\n\r\n    function handleFollow(e: SyntheticEvent, username: string){\r\n        e.preventDefault();\r\n        profile.following ? updateFollowing(username, false) : updateFollowing(username, true);\r\n    }\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button fluid color=\"teal\" content={profile.following ? 'Following' : 'Not Following'} />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          basic\r\n          color={profile.following ? \"red\" : \"green\"}\r\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n          loading={loading}\r\n          onClick={(e) => handleFollow(e, profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\nexport default observer(function ProfileCard({ profile }: Props) {\r\n  function truncate(str: string | undefined) {\r\n    if (str) {\r\n      return str.length > 40 ? str.substring(0, 37) + \"...\" : str;\r\n    }\r\n  }\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || \"/assets/user.png\"} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount} {profile.followersCount === 1 ? 'Follower' : 'Followers'}\r\n      </Card.Content>\r\n      <FollowButton profile={profile}/>\r\n    </Card>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Card, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store'\r\nimport ProfileCard from './ProfileCard';\r\n\r\nexport default observer(function ProfileFollowings() {\r\n\r\n    const {profileStore} = useStore();\r\n    const {profile, followings, loadingFollowings, activeTab} = profileStore;\r\n\r\n    return (\r\n        <Tab.Pane loading={loadingFollowings}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='user'\r\n                    content={activeTab === 3 ? `People following ${profile?.displayName}`: `People that ${profile?.displayName} is following`}/>\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {followings.map(profile => (\r\n                            <ProfileCard key={profile.username} profile={profile}/>\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import React from 'react'\r\nimport { Cropper } from 'react-cropper'\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\ninterface Props{\r\n    imagePreview: string;\r\n    setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({imagePreview, setCropper}: Props) {\r\n    return (\r\n        <Cropper\r\n            src={imagePreview}\r\n            style={{height: 200, width: '100%'}}\r\n            initialAspectRatio={1}\r\n            aspectRatio={1}\r\n            preview='.img-preview'\r\n            guides={false}\r\n            viewMode={1}\r\n            autoCropArea={1}\r\n            background={false}\r\n            onInitialized={cropper => setCropper(cropper)}\r\n        />\r\n    )\r\n}\r\n","import React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport { Header, Icon } from 'semantic-ui-react'\r\n\r\ninterface Props{\r\n    setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({setFiles}: Props) {\r\n    const dzStyles = {\r\n        border: 'dashed 3px #eee',\r\n        borderColor: '#eee',\r\n        borderRadius: '5px',\r\n        paddingTop: '30px',\r\n        textAlign: 'center' as 'center',\r\n        height: 200\r\n    }\r\n\r\n    const dzActive = {\r\n        borderColor: 'green'\r\n    }\r\n\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    setFiles(acceptedFiles.map((file : any) => Object.assign(file,{\r\n        preview: URL.createObjectURL(file)\r\n    })))\r\n  }, [setFiles])\r\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n  return (\r\n    <div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}>\r\n      <input {...getInputProps()} />\r\n      <Icon name='upload' size='huge'/>\r\n      <Header content='Drop image here'/>\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Cropper } from 'react-cropper';\r\nimport { Button, Grid, Header } from 'semantic-ui-react'\r\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\r\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone'\r\n\r\ninterface Props{\r\n    loading: boolean;\r\n    uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({loading, uploadPhoto}: Props) {\r\n    const [files, setFiles] = useState<any>([]);\r\n    const [cropper, setCropper] = useState<Cropper>();\r\n\r\n    function onCrop(){\r\n        if(cropper){\r\n            cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            files.forEach((file: any) => URL.revokeObjectURL(file.preview))\r\n        }\r\n    }, [files])\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 1 - Add Photo'/>\r\n                <PhotoWidgetDropzone setFiles={setFiles}/>\r\n            </Grid.Column>\r\n            <Grid.Column width={1}/>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 2 - Resize image'/>\r\n                {files && files.length > 0 && (\r\n                    <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview}/>\r\n                )}\r\n            </Grid.Column>\r\n            <Grid.Column width={1}/>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 3 - Preview & Upload Photo'/>\r\n                {files && files.length > 0 &&\r\n                <>\r\n                <div className='img-preview' style={{minHeight: 200, overflow: 'hidden'}}/>\r\n                <Button.Group widths={2}>\r\n                    <Button loading={loading} onClick={onCrop} positive icon='check'/>\r\n                    <Button disabled={loading} onClick={() => setFiles([])} icon='close'/>\r\n                </Button.Group>\r\n                </>}\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport * as React from \"react\";\r\nimport {useState, SyntheticEvent}  from \"react\";\r\nimport { Card, Header, Tab, Image, Grid, Button } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n  const { profileStore: { isCurrentUser, uploadPhoto, uploading, loading, setMainPhoto, deletePhoto } } = useStore();\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState('');\r\n\r\n  function handlePhotoUpload(file: Blob) {\r\n      uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  }\r\n\r\n  function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n      setTarget(e.currentTarget.name);\r\n      setMainPhoto(photo);\r\n  }\r\n\r\n  function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n      setTarget(e.currentTarget.name);\r\n      deletePhoto(photo);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading}/>\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map((photo) => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url} />\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2}>\r\n                        <Button basic\r\n                        color='green'\r\n                        content='Main'\r\n                        loading={target === 'main' + photo.id && loading}\r\n                        name={'main' + photo.id}\r\n                        disabled={photo.isMain}\r\n                        onClick={e => handleSetMainPhoto(photo, e)} />\r\n\r\n                        <Button\r\n                        basic\r\n                        color='red'\r\n                        icon='trash'\r\n                        loading={target === photo.id && loading}\r\n                        onClick={e => handleDeletePhoto(photo, e)}\r\n                        disabled={photo.isMain}\r\n                        name={photo.id} />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React, { SyntheticEvent, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserTelefoni } from \"../../app/models/profile\";\r\nimport { format } from \"date-fns\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nconst panes = [\r\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\r\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\r\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\r\n];\r\nexport default observer(function ProfileTelefonat() {\r\n  const { profileStore } = useStore();\r\n  const { loadUserTelefonat, profile, loadingTelefonat, userTelefonat } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadUserTelefonat(profile!.username);\r\n  }, [loadUserTelefonat, profile]);\r\n\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadUserTelefonat(\r\n      profile!.username,\r\n      panes[data.activeIndex as number].pane.key\r\n    );\r\n  };\r\n  return (\r\n    <Tab.Pane loading={loadingTelefonat}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content={\"Telefonat\"} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userTelefonat.map((telefoni: UserTelefoni) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/telefonat/${telefoni.id}`}\r\n                key={telefoni.id}\r\n              >\r\n                <Image\r\n                  src={`/assets/telefonat/${telefoni.kategoria}.png`}\r\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">{telefoni.emri}</Card.Header>\r\n                  <Card.Meta textAlign=\"center\">\r\n                    <div>{format(new Date(telefoni.data), \"do LLL\")}</div>\r\n                    <div>{format(new Date(telefoni.data), \"h:mm a\")}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\nimport ProfileTelefonat from \"./ProfileTelefonat\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n\r\n  const {profileStore} = useStore();\r\n\r\n  const panes = [\r\n    {menuItem: 'About', render: () => <ProfileAbout/>},\r\n    {menuItem: 'Photos', render: () => <ProfilePhotos profile={profile}/>},\r\n    {menuItem: 'Produktet', render: () => <ProfileTelefonat/>},\r\n    {menuItem: 'Followers', render: () => <ProfileFollowings/>},\r\n    {menuItem: 'Following', render: () => <ProfileFollowings/>},\r\n    ];\r\n\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Divider, Grid, Header, Item, Segment, Statistic } from 'semantic-ui-react'\r\nimport { Profile } from '../../app/models/profile'\r\nimport FollowButton from './FollowButton'\r\n\r\ninterface Props{\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer (function ProfileHeader ({profile}: Props){\r\n    return (\r\n        <Segment>\r\n            <Grid>\r\n                <Grid.Column width={12}>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Image avatar size='small' src={profile.image || '/assets/user.png'}/>\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Header as='h1' content={profile.displayName}/>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Statistic.Group width={2}>\r\n                        <Statistic label='Followers' value={profile.followersCount}/>\r\n                        <Statistic label='Following' value={profile.followingCount}/>\r\n                    </Statistic.Group>\r\n                    <Divider/>\r\n                    <FollowButton profile={profile}/>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n})","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport  { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport LoadingComponent from '../../app/layout/LoadingComponent'\r\nimport { useStore } from '../../app/stores/store'\r\nimport ProfileContent from './ProfileContent'\r\nimport ProfileHeader from './ProfileHeader'\r\n\r\nexport default observer (function ProfilePage (){\r\n    const {username} = useParams<{username: string}>();\r\n    const {profileStore} = useStore();\r\n    const {loadingProfile, loadProfile, profile, setActiveTab} = profileStore;\r\n\r\n    useEffect(()=>{\r\n        loadProfile(username);\r\n        return () => {\r\n            setActiveTab(0);\r\n        }\r\n    },[loadProfile, username, setActiveTab])\r\n\r\n    if(loadingProfile) return <LoadingComponent content='Te dhenat e profilit jane duke u hapur'/>\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={16}>\r\n                {profile &&\r\n                <>\r\n                <ProfileHeader profile={profile}/>\r\n                <ProfileContent profile={profile}/>\r\n                </>}\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport Calendar from 'react-calendar'\r\nimport { Header, Menu } from 'semantic-ui-react'\r\nimport { useStore } from '../../../app/stores/store'\r\n\r\nexport default observer (function TelefoniFilters () {\r\n\r\n    const {telefoniStore: {predicate, setPredicate}} = useStore();\r\n\r\n    return (\r\n        <>\r\n        <Menu vertical size='large' style={{width: '100%', marginTop: 28}}>\r\n            <Header icon='filter' attached color='teal' content=\"Filters\"/>\r\n            <Menu.Item content=\"Te gjithe Telefonat\" active={predicate.has('all')} onClick={() => setPredicate('all', 'true')}/>\r\n            <Menu.Item content=\"I am Interesed\" active={predicate.has('isInteresed')} onClick={() => setPredicate('isInteresed', 'true')}/>\r\n            <Menu.Item content=\"I am hosting\" active={predicate.has('isHost')} onClick={() => setPredicate('isHost', 'true')}/>\r\n        </Menu>\r\n        <Header/>\r\n        <Calendar onChange={(data) => setPredicate('startDate', data as Date)}\r\n        value={predicate.get('startDate') || new Date()}/>\r\n        </>\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { List, Image, Popup} from 'semantic-ui-react';\r\nimport { Profile } from '../../../app/models/profile';\r\nimport ProfileCard from '../../profiles/ProfileCard';\r\n\r\ninterface Props{\r\n    telefonatPrezencat: Profile[];\r\n}\r\n\r\nexport default observer(function TelefoniListItemPrezenca({telefonatPrezencat}: Props){\r\n\r\n    const styles ={\r\n        borderColor: 'orange',\r\n        borderWidth: 3\r\n    }\r\n\r\n    return (\r\n        <List horizontal>\r\n            {telefonatPrezencat.map(telefonatPrezenca=>(\r\n                <Popup hoverable key={telefonatPrezenca.username}\r\n                trigger={\r\n                <List.Item key={telefonatPrezenca.username} as={Link} to={`/profiles/${telefonatPrezenca.username}`}>\r\n                    <Image size='mini' circular src={telefonatPrezenca.image || '/assets/user.png'} bordered style={telefonatPrezenca.following ? styles : null}/>\r\n                </List.Item>}>\r\n                    <Popup.Content>\r\n                        <ProfileCard profile={telefonatPrezenca}/>\r\n                    </Popup.Content>\r\n                </Popup>\r\n                \r\n            ))}\r\n        </List>\r\n    )\r\n})\r\n","import { format } from \"date-fns\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Telefoni } from \"../../../app/models/telefoni\";\r\nimport TelefoniListItemPrezenca from \"./TelefoniListItemPrezenca\";\r\n\r\ninterface Props {\r\n  telefoni: Telefoni;\r\n}\r\n\r\nexport default function TelefoniListItem({ telefoni }: Props) {\r\n\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {telefoni.isCancelled && <Label attached=\"top\" color=\"red\" content='Canceled' style={{textAlign: 'center'}}/>}\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image style={{marginBottom: 5}} size=\"tiny\" circular src={telefoni.host?.image || \"/assets/user.png\"} />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/telefonat/${telefoni.id}`}>\r\n                {telefoni.emri}\r\n              </Item.Header>\r\n              <Item.Description>Hosted by <Link to={`/profiles/${telefoni.hostUsername}`}>{telefoni.host?.displayName}</Link></Item.Description>\r\n              {telefoni.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color='orange'>\r\n                    Ju jeni Host per kete produkt\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n              {telefoni.isInteresed && !telefoni.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color='green'>\r\n                    Ju jeni duke shikuar kete produkt\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name=\"clock\" />\r\n          {format(telefoni.data!, 'dd, MMM yyyy h:mm aa')} <br />\r\n          <Icon name=\"shopping basket\" />\r\n          {telefoni.kategoria} <br />\r\n          <Icon name=\"euro sign\" />\r\n          {telefoni.cmimi}\r\n        </span>\r\n      </Segment>\r\n        <Segment secondary>\r\n          <TelefoniListItemPrezenca telefonatPrezencat={telefoni.telefonatPrezencat!}/>\r\n        </Segment>\r\n      <Segment clearing>\r\n        <span>{telefoni.pershkrimi}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/telefonat/${telefoni.id}`}\r\n          color=\"teal\"\r\n          floated=\"right\"\r\n          content=\"View\"\r\n        ></Button>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport TelefoniListItem from \"./TelefoniListItem\";\r\n\r\nexport default observer(function TelefoniList() {\r\n  const { telefoniStore } = useStore();\r\n  const { groupedTelefonat } = telefoniStore;\r\n\r\n  //style={{marginLeft:\"30%\", width:\"100%\"}}\r\n  return (\r\n    <>\r\n      {groupedTelefonat.map(([group, telefonat]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color=\"teal\">\r\n            {group}\r\n          </Header>\r\n          {telefonat.map((telefoni) => (\r\n            <TelefoniListItem key={telefoni.id} telefoni={telefoni} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function TelefoniListItemPlaceholder() {\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={{ marginTop: 25 }}>\r\n                <Segment.Group>\r\n                    <Segment style={{ minHeight: 110 }}>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={{ minHeight: 70 }} />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content='View' />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport TelefoniFilters from \"./TelefoniFilters\";\r\nimport TelefoniList from \"./TelefoniList\";\r\nimport TelefoniListItemPlaceholder from \"./TelefoniListItemPlaceholder\";\r\n\r\nexport default observer(function TelefoniDashboard() {\r\n  const { telefoniStore } = useStore();\r\n  const { loadTelefonat, telefoniRegistry, setPagingParams, pagination } =\r\n    telefoniStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadTelefonat().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (telefoniRegistry.size <= 1) loadTelefonat();\r\n  }, [telefoniRegistry.size, loadTelefonat]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        {telefoniStore.loadingInitial && !loadingNext ? (\r\n          <>\r\n            <TelefoniListItemPlaceholder/>\r\n            <TelefoniListItemPlaceholder/>\r\n          </>\r\n        ):(\r\n          <InfiniteScroll pageStart={0} loadMore={handleGetNext}\r\n        hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages} initialLoad={false}>\r\n          <TelefoniList />\r\n        </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <TelefoniFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext}/>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { Formik, Form, Field, FieldProps } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Segment, Header, Comment, Loader} from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport { formatDistanceToNow } from 'date-fns';\r\n\r\ninterface Props{ \r\n    telefoniId: string;\r\n}\r\n\r\nexport default observer(function TelefoniDetailedChat({telefoniId}: Props) {\r\n\r\n    const {commentStore} = useStore();\r\n\r\n    useEffect(() => {\r\n        if(telefoniId){\r\n            commentStore.createHubConnection(telefoniId);\r\n        }\r\n        return () => {\r\n            commentStore.clearComents();\r\n        }\r\n    }, [commentStore, telefoniId]);\r\n\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                attached='top'\r\n                inverted\r\n                color='teal'\r\n                style={{border: 'none'}}\r\n            >\r\n                <Header>Replies</Header>\r\n            </Segment>\r\n            <Segment attached clearing>\r\n            <Formik onSubmit={(values, {resetForm}) =>\r\n                    commentStore.addComment(values).then(() =>\r\n                    resetForm())} initialValues={{body: ''}} \r\n                    validationSchema={Yup.object({\r\n                        body: Yup.string().required()\r\n                    })}>\r\n                        {({isSubmitting, isValid, handleSubmit}) => (\r\n                            <Form className='ui form'>\r\n                                <Field name='body'>\r\n                                    {(props: FieldProps) => (\r\n                                        <div style={{position: 'relative'}}>\r\n                                            <Loader active={isSubmitting}/>\r\n                                            <textarea placeholder='Enter ypur comment (Enter to submit, ShIFT + Enter for the new line)'\r\n                                            rows={2} {...props.field}\r\n                                            onKeyPress={e => {\r\n                                                if(e.key === 'Enter' && e.shiftKey){\r\n                                                    return;\r\n                                                }\r\n                                                if(e.key === 'Enter' && !e.shiftKey){\r\n                                                    e.preventDefault();\r\n                                                    isValid && handleSubmit();\r\n                                                }\r\n                                            }}/>\r\n                                        </div>\r\n                                    )}\r\n                                </Field>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                <Comment.Group>\r\n                    {commentStore.comments.map(comment => (\r\n                        <Comment key={comment.id}>\r\n                            <Comment.Avatar src={ comment.image || '/assets/user.png'}/>\r\n                            <Comment.Content>\r\n                                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>{comment.displayName}</Comment.Author>\r\n                                <Comment.Metadata>\r\n                                    <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                                </Comment.Metadata>\r\n                                <Comment.Text style={{whiteSpace: 'pre-wrap'}}>{comment.body}</Comment.Text>\r\n                            </Comment.Content>\r\n                        </Comment>\r\n                    ))}\r\n\r\n                    \r\n                </Comment.Group>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\r\nimport { Telefoni } from \"../../../app/models/telefoni\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nconst telefoniImageStyle = {\r\n  filter: \"brightness(60%)\",\r\n};\r\n\r\nconst telefoniImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\ninterface Props {\r\n  telefoni: Telefoni;\r\n}\r\n\r\nexport default observer(function TelefoniDetailedHeader({ telefoni }: Props) {\r\n  const {telefoniStore: {updatePrezencen, loading, cancelTelefoniToggle}} = useStore();\r\n  return (\r\n    <Segment.Group style={{ width: \"75%\" }}>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        {telefoni.isCancelled &&\r\n          <Label style={{position: 'absolute', zIndex: 1000, left: -14, top: 20}}\r\n            ribbon color='red' content='Cancelled'/>\r\n        }\r\n        <Image\r\n          src={`/assets/telefonat/${telefoni.kategoria}.png`}\r\n          fluid\r\n          style={telefoniImageStyle}\r\n        />\r\n        <Segment style={telefoniImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={telefoni.emri}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p>{format(telefoni.data!, \"dd MMM yyyy\")}</p>\r\n                <p>\r\n                  Hosted by <strong><Link to={`/pofiles/${telefoni.host?.username}`}>{telefoni.host?.displayName}</Link></strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {telefoni.isHost ? (\r\n          <>\r\n          <Button color={telefoni.isCancelled ? 'green' : 'red'} floated=\"left\"\r\n            basic content={telefoni.isCancelled ? 'Re-Aktivizo Telefonin' : 'Cancel Telefonin'}\r\n            onClick={cancelTelefoniToggle} loading={loading}/>\r\n          <Button\r\n            disabled={telefoni.isCancelled}\r\n            as={Link}\r\n            to={`/manage/${telefoni.id}`}\r\n            color=\"orange\"\r\n            floated=\"right\"\r\n          >\r\n            Menaxho Telefonin\r\n          </Button>\r\n          </>\r\n        ) : telefoni.isInteresed ? (\r\n          <Button loading={loading} onClick={updatePrezencen}>Anulo te shikuarit</Button>\r\n        ) : (\r\n          <Button disabled={telefoni.isCancelled} loading={loading}\r\n            onClick={updatePrezencen} color=\"teal\">Shiko Telefonin\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","\r\nimport { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\r\nimport {Telefoni} from \"../../../app/models/telefoni\";\r\n\r\ninterface Props {\r\n    telefoni: Telefoni\r\n}\r\n\r\nexport default observer(function TelefoniDetailedInfo({telefoni}: Props) {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment attached='top'>\r\n                <Grid>\r\n                    <Grid.Column width={1}>\r\n                        <Icon size='large' color='teal' name='info'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <p>{telefoni.kategoria}</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='calendar' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n            <span>\r\n              {format(telefoni.data!, 'dd MMM yyyy h:mm aa')}\r\n            </span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='shopping cart' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11}>\r\n                        <span>{telefoni.pershkrimi},<br /> {telefoni.cmimi+\"€\"}</span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","import React from 'react'\r\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Telefoni } from '../../../app/models/telefoni'\r\n\r\ninterface Props{\r\n    telefoni: Telefoni;\r\n}\r\n\r\nexport default observer(function TelefoniDetailedSidebar ({telefoni: {telefonatPrezencat, host}}: Props) {\r\n    if(!telefonatPrezencat) return null;\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                style={{ border: 'none' }}\r\n                attached='top'\r\n                secondary\r\n                inverted\r\n                color='teal'\r\n            >\r\n                {telefonatPrezencat.length} {telefonatPrezencat.length === 1 ? 'Person eshte' : 'Persona jane'} duke shikuar telefonin\r\n            </Segment>\r\n            <Segment attached>\r\n                <List relaxed divided>\r\n                    {telefonatPrezencat.map(telefonatPrezenca =>(\r\n                        <Item style={{ position: 'relative' }} key={telefonatPrezenca.username}>\r\n                            {telefonatPrezenca.username === host?.username &&\r\n                        <Label\r\n                            style={{ position: 'absolute' }}\r\n                            color='orange'\r\n                            ribbon='right'\r\n                        >\r\n                            Host\r\n                        </Label>}\r\n                        <Image size='tiny' src={telefonatPrezenca.image || '/assets/user.png'} />\r\n                        <Item.Content verticalAlign='middle'>\r\n                            <Item.Header as='h3'>\r\n                                <Link to={`/profiles/${telefonatPrezenca.username}`}>{telefonatPrezenca.displayName}</Link>\r\n                            </Item.Header>\r\n                            {telefonatPrezenca.following &&\r\n                            <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>}\r\n                        </Item.Content>\r\n                    </Item>\r\n                    ))}\r\n                </List>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport TelefoniDetailedChat from \"./TelefoniDetailedChat\";\r\nimport TelefoniDetailedHeader from \"./TelefoniDetailedHeader\";\r\nimport TelefoniDetailedInfo from \"./TelefoniDetailedInfo\";\r\nimport TelefoniDetailedSidebar from \"./TelefoniDetailedSidebar\";\r\n\r\nexport default observer(function TelefoniDetails() {\r\n  const { telefoniStore } = useStore();\r\n  const {\r\n    selectedTelefoni: telefoni,\r\n    loadTelefoni,\r\n    loadingInitial,\r\n    clearSelectedTelefoni\r\n  } = telefoniStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadTelefoni(id);\r\n    return () => clearSelectedTelefoni();\r\n  }, [id, loadTelefoni, clearSelectedTelefoni]);\r\n\r\n  if (loadingInitial || !telefoni)\r\n    return (\r\n      <LoadingComponent content={\"Te dhenat e telefonit jane duke u hapur!\"}/>\r\n    );\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <TelefoniDetailedHeader telefoni={telefoni}/>\r\n        <TelefoniDetailedInfo telefoni={telefoni}/>\r\n        <TelefoniDetailedChat telefoniId={telefoni.id}/>\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <TelefoniDetailedSidebar telefoni={telefoni}/>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(e, d) => helpers.setValue(d.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","export const categoryOptionsTelefonat = [\r\n    {text:'13 Pro Max - Sierra Blue', value: 'iPhone 13 Pro Max Sierra Blue'},\r\n    {text:'13 Pro Max - Black', value: 'iPhone 13 Pro Max Black'},\r\n    {text:'X - Black', value: 'iPhone X Black'},\r\n    {text:'X - White', value: 'iPhone X White'},\r\n    {text:'7 - Rose', value: 'iPhone 7 Rose'}\r\n]","import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { Form, Label } from 'semantic-ui-react';\r\nimport DatePicker, {ReactDatePickerProps} from 'react-datepicker';\r\n\r\n\r\nexport default function MyDateInput (props: Partial<ReactDatePickerProps>) {\r\n    const [field, meta, helpers] = useField(props.name!);\r\n    \r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <DatePicker\r\n                {...field}\r\n                {...props}\r\n                selected={(field.value && new Date(field.value)) || null}\r\n                onChange={value => helpers.setValue(value)}\r\n            />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Button, Segment, Header } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\r\nimport { categoryOptionsTelefonat } from \"../../../app/common/options/CategoryOptions\";\r\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\r\nimport { TelefoniFormValues } from \"../../../app/models/telefoni\";\r\n\r\nexport default observer(function TelefoniForm() {\r\n  const history = useHistory();\r\n  const { telefoniStore } = useStore();\r\n  const { createTelefoni, updateTelefoni,\r\n    loadTelefoni, loadingInitial,} = telefoniStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const [telefoni, setTelefoni] = useState<TelefoniFormValues>(new TelefoniFormValues());\r\n\r\n  const validationSchema = Yup.object({\r\n    emri: Yup.string().required('Fusha per Emrin e telefonit është e nevojshme!'),\r\n    kategoria: Yup.string().required('Fusha per Kategorine e telefonit është e nevojshme!'),\r\n    data: Yup.string().required('Fusha per Datën e telefonit është e nevojshme!').nullable(),\r\n    brendi: Yup.string().required(),\r\n    pershkrimi: Yup.string().required(),\r\n    cmimi: Yup.number().required()\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (id) loadTelefoni(id).then(telefoni => setTelefoni(new TelefoniFormValues(telefoni)))\r\n  }, [id, loadTelefoni]);\r\n\r\n  function handleFormSubmit(telefoni: TelefoniFormValues) {\r\n    if (!telefoni.id) {\r\n      let newTelefoni = {\r\n        ...telefoni,\r\n        id: uuid(),\r\n      };\r\n      createTelefoni(newTelefoni).then(() =>\r\n        history.push(`/telefonat/${newTelefoni.id}`)\r\n      );\r\n    } else {\r\n      updateTelefoni(telefoni).then(() =>\r\n        history.push(`/telefonat/${telefoni.id}`)\r\n      );\r\n    }\r\n  }\r\n\r\n  if (loadingInitial) return <LoadingComponent content=\"Te dhenat e telefonit jane duke u hapur!\"/>\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content={\"Te Dhenat e Telefonit\"} sub color='teal'/>\r\n      <Formik validationSchema={validationSchema} enableReinitialize initialValues={telefoni} onSubmit={values => handleFormSubmit(values)}>\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form className='ui form' onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <MyTextInput name='emri' placeholder='Emri i Telefonit'/>\r\n            <MySelectInput options={categoryOptionsTelefonat} placeholder=\"Kategoria e Telefonit\" name=\"kategoria\"/>\r\n            <MyTextInput placeholder=\"Brendi i Telefonit\" name=\"brendi\"/>\r\n            <MyDateInput  placeholderText=\"Data\" name=\"data\" showTimeSelect timeCaption='time' dateFormat='d MMMM, yyyy h:mm aa'/>\r\n            <MyTextArea rows={3} placeholder=\"Pershkrimi i Telefonit\" name=\"pershkrimi\"/>\r\n            <MyTextInput placeholder=\"Cmimi i Telefonit\" name=\"cmimi\"/>\r\n            <Button disabled={isSubmitting || !dirty || !isValid} loading={isSubmitting} floated=\"right\" positive type=\"submit\" content=\"Submit\"/>\r\n            <Button as={Link} to='/telefonat' floated=\"right\" type=\"button\" content=\"Cancel\"/>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n});\r\n","import React, { useState } from 'react';\r\nimport {Button, Header, Segment} from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport ValidationErrors from './ValidationErrors';\r\n\r\nexport default function TestErrors() {\r\n    const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n    const [errors, setErrors] = useState(null);\r\n\r\n    function handleNotFound() {\r\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get(baseUrl + 'telefonat/notaguid').catch(err => console.log(err));\r\n    }\r\n\r\n    function handleValidationError() {\r\n        axios.post(baseUrl + 'telefonat', {}).catch(err => setErrors(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header as='h1' content='Test Error component' />\r\n            <Segment>\r\n                <Button.Group widths='7'>\r\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </Button.Group>\r\n            </Segment>\r\n            {errors && \r\n            <ValidationErrors errors={errors}/>}\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react'\r\n\r\nexport default function NotFound (){\r\n    return (\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search'/>\r\n                Oops - nuk gjetem ate qe po kerkoni!\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/telefonat' primary>\r\n                    Kthehu tek telefonat\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Container, Header, Segment } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nexport default observer(function ServerError (){\r\n    const {commonStore} = useStore();\r\n\r\n    return(\r\n        <Container>\r\n            <Header as='h1' content='Server Error'/>\r\n            <Header sub as='h5' color='red' content={commonStore.error?.message}/>\r\n            {commonStore.error?.details &&\r\n            <Segment>\r\n                <Header as='h4' content='Stack trace' color='teal'/>\r\n                <code style={{marginTop: '10px'}}>{commonStore.error.details}</code>\r\n            </Segment>\r\n            }\r\n        </Container>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStore } from '../../stores/store'\r\n\r\nexport default observer (function ModalContainer() {\r\n\r\n    const {modalStore} = useStore();\r\n\r\n    return(\r\n    <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini' style={{width: '500px'}}>\r\n        <Modal.Content>\r\n            {modalStore.modal.body}\r\n        </Modal.Content>\r\n    </Modal>\r\n    )\r\n})","import React from 'react'\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from 'react-router-dom';\r\nimport { useStore } from '../stores/store'\r\n\r\ninterface Props extends RouteProps{\r\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({component: Component, ...rest}: Props) {\r\n\r\n    const{userStore: {isLoggedIn}} = useStore();\r\n\r\n    return (\r\n        <Route {...rest} render={(props) => isLoggedIn ? <Component {...props}/> : <Redirect to='/'/>}/>\r\n    )\r\n}\r\n","//Others\r\nimport React, { useEffect } from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport NavBar from \"./NavBar\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Route, Switch, useLocation } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\n//HomePage\r\nimport HomePage from \"../../features/home/HomePage\";\r\n\r\n//Profile\r\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\r\n\r\n//Telefonat\r\nimport TelefoniDashboard from \"../../features/telefonat/dashboard/TelefoniDashboard\";\r\nimport TelefoniDetails from \"../../features/telefonat/details/TelefoniDetails\";\r\nimport TelefoniForm from \"../../features/telefonat/form/TelefoniForm\";\r\n\r\n//Errors\r\nimport TestErrors from \"../../features/errors/TestError\";\r\nimport NotFound from \"../../features/errors/NotFound\";\r\nimport ServerError from \"../../features/errors/ServerError\";\r\nimport { useStore } from \"../stores/store\";\r\nimport LoadingComponent from \"./LoadingComponent\";\r\nimport ModalContainer from \"../common/modals/ModalContainer\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n  const { commonStore, userStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (commonStore.token) {\r\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\r\n    } else {\r\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\r\n      commonStore.setAppLoaded();\r\n    }\r\n  }, [commonStore, userStore]);\r\n\r\n  if (!commonStore.appLoaded)\r\n    return <LoadingComponent content=\"Loading app...\" />;\r\n\r\n  return (\r\n    <>\r\n      <ModalContainer />\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route\r\n        path={\"/(.+)\"}\r\n        render={() => (\r\n          <>\r\n            <ToastContainer position=\"bottom-right\" hideProgressBar />;\r\n            <NavBar />\r\n            <Container style={{ marginTop: \"7em\" }}>\r\n              <Switch>\r\n                <PrivateRoute exact path=\"/telefonat\" component={TelefoniDashboard}/>\r\n                <PrivateRoute path=\"/telefonat/:id\" component={TelefoniDetails}/>\r\n                <PrivateRoute key={location.key} path={[\"/createTelefoni\", \"/manage/:id\"]} component={TelefoniForm}/>\r\n                <PrivateRoute path=\"/profiles/:username\" component={ProfilePage}/>\r\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\r\n                \r\n                <Route path=\"/server-error\" component={ServerError} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport 'react-calendar/dist/Calendar.css'\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { Router } from \"react-router-dom\";\nimport {createBrowserHistory} from 'history';\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop/>\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}